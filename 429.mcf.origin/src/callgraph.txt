<callgraph>
	<item> from=[resize_prob] to=[__assert_fail] </item>
	<item> from=[resize_prob] to=[realloc] </item>
	<item> from=[resize_prob] to=[printf] </item>
	<item> from=[resize_prob] to=[fflush] </item>
	<item> from=[price_out_impl] to=[resize_prob] </item>
	<item> from=[price_out_impl] to=[refresh_neighbour_lists] </item>
	<item> from=[price_out_impl] to=[insert_new_arc] </item>
	<item> from=[price_out_impl] to=[replace_weaker_arc] </item>
	<item> from=[suspend_impl] to=[llvm.memcpy.p0i8.p0i8.i32] </item>
	<item> from=[suspend_impl] to=[refresh_neighbour_lists] </item>
	<item> from=[global_opt] to=[printf] </item>
	<item> from=[global_opt] to=[primal_net_simplex] </item>
	<item> from=[global_opt] to=[printf] </item>
	<item> from=[global_opt] to=[flow_cost] </item>
	<item> from=[global_opt] to=[printf] </item>
	<item> from=[global_opt] to=[suspend_impl] </item>
	<item> from=[global_opt] to=[printf] </item>
	<item> from=[global_opt] to=[price_out_impl] </item>
	<item> from=[global_opt] to=[printf] </item>
	<item> from=[global_opt] to=[printf] </item>
	<item> from=[global_opt] to=[exit] </item>
	<item> from=[global_opt] to=[printf] </item>
	<item> from=[main] to=[printf] </item>
	<item> from=[main] to=[printf] </item>
	<item> from=[main] to=[printf] </item>
	<item> from=[main] to=[printf] </item>
	<item> from=[main] to=[printf] </item>
	<item> from=[main] to=[llvm.memset.p0i8.i32] </item>
	<item> from=[main] to=[strcpy] </item>
	<item> from=[main] to=[read_min] </item>
	<item> from=[main] to=[printf] </item>
	<item> from=[main] to=[getfree] </item>
	<item> from=[main] to=[printf] </item>
	<item> from=[main] to=[primal_start_artificial] </item>
	<item> from=[main] to=[global_opt] </item>
	<item> from=[main] to=[printf] </item>
	<item> from=[main] to=[write_circulations] </item>
	<item> from=[main] to=[getfree] </item>
	<item> from=[main] to=[getfree] </item>
	<item> from=[primal_feasible] to=[printf] </item>
	<item> from=[primal_feasible] to=[printf] </item>
	<item> from=[primal_feasible] to=[printf] </item>
	<item> from=[primal_feasible] to=[printf] </item>
	<item> from=[dual_feasible] to=[fprintf] </item>
	<item> from=[dual_feasible] to=[fprintf] </item>
	<item> from=[getfree] to=[free] </item>
	<item> from=[getfree] to=[free] </item>
	<item> from=[getfree] to=[free] </item>
	<item> from=[write_circulations] to=[fopen] </item>
	<item> from=[write_circulations] to=[refresh_neighbour_lists] </item>
	<item> from=[write_circulations] to=[fprintf] </item>
	<item> from=[write_circulations] to=[fprintf] </item>
	<item> from=[write_circulations] to=[fprintf] </item>
	<item> from=[write_circulations] to=[fclose] </item>
	<item> from=[write_circulations] to=[fclose] </item>
	<item> from=[sort_basket] to=[sort_basket] </item>
	<item> from=[sort_basket] to=[sort_basket] </item>
	<item> from=[primal_bea_mpp] to=[bea_is_dual_infeasible] </item>
	<item> from=[primal_bea_mpp] to=[sort_basket] </item>
	<item> from=[primal_net_simplex] to=[primal_bea_mpp] </item>
	<item> from=[primal_net_simplex] to=[primal_iminus] </item>
	<item> from=[primal_net_simplex] to=[primal_update_flow] </item>
	<item> from=[primal_net_simplex] to=[update_tree] </item>
	<item> from=[primal_net_simplex] to=[refresh_potential] </item>
	<item> from=[primal_net_simplex] to=[refresh_potential] </item>
	<item> from=[primal_net_simplex] to=[primal_feasible] </item>
	<item> from=[primal_net_simplex] to=[dual_feasible] </item>
	<item> from=[read_min] to=[fopen] </item>
	<item> from=[read_min] to=[fgets] </item>
	<item> from=[read_min] to=[__isoc99_sscanf] </item>
	<item> from=[read_min] to=[__assert_fail] </item>
	<item> from=[read_min] to=[calloc] </item>
	<item> from=[read_min] to=[calloc] </item>
	<item> from=[read_min] to=[calloc] </item>
	<item> from=[read_min] to=[printf] </item>
	<item> from=[read_min] to=[getfree] </item>
	<item> from=[read_min] to=[fgets] </item>
	<item> from=[read_min] to=[__isoc99_sscanf] </item>
	<item> from=[read_min] to=[fgets] </item>
	<item> from=[read_min] to=[__isoc99_sscanf] </item>
	<item> from=[read_min] to=[fclose] </item>
</callgraph>
