
    // const size_t sel_size = newvec.size();

    // std::vector<int> new_vendor_id;
    // std::vector<int> &vids = get_column<int>("VendorID");
    // uint64_t vid_base = remoteAddr((void *)&vids[0]);
    // dummy_reader(new_vendor_id, (2<<20), 16, 8, sel_size, vid_base);

    // std::vector<SimpleTime> new_pickup_datetime;
    // std::vector<SimpleTime> &pdt = get_column<SimpleTime>("tpep_pickup_datetime");
    // uint64_t pdt_base = remoteAddr((void *)&pdt[0]);
    // dummy_reader(new_pickup_datetime, (2<<20), 16, 8, sel_size, pdt_base);

    // std::vector<SimpleTime> new_dropoff_datetime;
    // std::vector<SimpleTime> &ddt = get_column<SimpleTime>("tpep_dropoff_datetime");
    // uint64_t ddt_base = remoteAddr((void *)&ddt[0]);
    // dummy_reader(new_dropoff_datetime, (2<<20), 16, 8, sel_size, ddt_base);

    // std::vector<int> new_psg_count;
    // std::vector<int> &psg = get_column<int>("passenger_count");
    // uint64_t psg_base = remoteAddr((void *)&psg[0]);
    // dummy_reader(new_psg_count, (2<<20), 16, 8, sel_size, psg_base);

    // std::vector<double> new_trip_dist;
    // std::vector<double> &trip_dist = get_column<double>("trip_distance");
    // uint64_t trip_dist_base = remoteAddr((void *)&trip_dist[0]);
    // dummy_reader(new_trip_dist, (2<<20), 16, 8, sel_size, trip_dist_base);

    // std::vector<double> new_plon;
    // std::vector<double> &plon = get_column<double>("pickup_longitude");
    // uint64_t plon_base = remoteAddr((void *)&plon[0]);
    // dummy_reader(new_plon, (2<<20), 16, 8, sel_size, plon_base);

    // std::vector<double> new_plat;
    // std::vector<double> &plat = get_column<double>("pickup_latitude");
    // uint64_t plat_base = remoteAddr((void *)&plat[0]);
    // dummy_reader(new_plat, (2<<20), 16, 8, sel_size, plat_base);

    // std::vector<int> new_rate;
    // std::vector<int> &rate = get_column<int>("RatecodeID");
    // uint64_t rate_base = remoteAddr((void *)&rate[0]);
    // dummy_reader(new_rate, (2<<20), 16, 8, sel_size, rate_base);

    // std::vector<char> new_flag;
    // std::vector<char> &flag = get_column<char>("store_and_fwd_flag");
    // uint64_t flag_base = remoteAddr((void *)&flag[0]);
    // dummy_reader(new_flag, (2<<20), 16, 8, sel_size, flag_base);

    // std::vector<double> new_dlon;
    // std::vector<double> &dlon = get_column<double>("dropoff_longitude");
    // uint64_t dlon_base = remoteAddr((void *)&dlon[0]);
    // dummy_reader(new_dlon, (2<<20), 16, 8, sel_size, dlon_base);

    // std::vector<double> new_dlat;
    // std::vector<double> &dlat = get_column<double>("dropoff_latitude");
    // uint64_t dlat_base = remoteAddr((void *)&dlat[0]);
    // dummy_reader(new_dlat, (2<<20), 16, 8, sel_size, dlat_base);

    // std::vector<int> new_ptype;
    // std::vector<int> &payment = get_column<int>("payment_type");
    // uint64_t payment_base = remoteAddr((void *)&dlat[0]);
    // dummy_reader(new_ptype, (2<<20), 16, 8, sel_size, payment_base);

    // std::vector<double> new_famount;
    // std::vector<double> &fare = get_column<double>("fare_amount");
    // uint64_t fare_base = remoteAddr((void *)&fare[0]);
    // dummy_reader(new_famount, (2<<20), 16, 8, sel_size, fare_base);

    // std::vector<double> new_extra;
    // std::vector<double> &extra = get_column<double>("extra");
    // uint64_t extra_base = remoteAddr((void *)&extra[0]);
    // dummy_reader(new_extra, (2<<20), 16, 8, sel_size, extra_base);

    // std::vector<double> new_mta;
    // std::vector<double> &mta = get_column<double>("mta_tax");
    // uint64_t mta_base = remoteAddr((void *)&mta[0]);
    // dummy_reader(new_mta, (2<<20), 16, 8, sel_size, mta_base);

    // std::vector<double> new_tip;
    // std::vector<double> &tip = get_column<double>("tip_amount");
    // uint64_t tip_base = remoteAddr((void *)&tip[0]);
    // dummy_reader(new_tip, (2<<20), 16, 8, sel_size, tip_base);

    // std::vector<double> new_tolls;
    // std::vector<double> &tolls = get_column<double>("tolls_amount");
    // uint64_t tolls_base = remoteAddr((void *)&tolls[0]);
    // dummy_reader(new_tolls, (2<<20), 16, 8, sel_size, tolls_base);

    // std::vector<double> new_impv;
    // std::vector<double> &impv = get_column<double>("improvement_surcharge");
    // uint64_t impv_base = remoteAddr((void *)&impv[0]);
    // dummy_reader(new_impv, (2<<20), 16, 8, sel_size, impv_base);

    // std::vector<double> new_total;
    // std::vector<double> &total = get_column<double>("total_amount");
    // uint64_t total_base = remoteAddr((void *)&total[0]);
    // dummy_reader(new_total, (2<<20), 16, 8, sel_size, total_base);