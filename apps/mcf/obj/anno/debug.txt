
//===-------------------------------------------===//
Legalizing operation : 'builtin.module'(0x3ae0b70) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.mlir.global'(0x3a57ed0) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.func'(0x3a2ff70) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.mlir.global'(0x3a9a3c0) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.func'(0x3a9cfd0) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.mlir.global'(0x3a9e520) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.mlir.global'(0x3a9e580) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.mlir.global'(0x3a9e5e0) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.func'(0x3ae7df0) {
  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'func.func -> ()' {
    ** Insert  : 'func.func'(0x3b5c330)
    ** Erase   : 'func.func'(0x3ae7df0)

    //===-------------------------------------------===//
    Legalizing operation : 'func.func'(0x3b5c330) {
    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3a9e950) {
  %0 = "arith.constant"() {value = true} : () -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3ab13f0) {
  %1 = "arith.constant"() {value = 0 : i64} : () -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3ab2590) {
  %2 = "arith.constant"() {value = -1 : i64} : () -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3ab3730) {
  %3 = "arith.constant"() {value = 39 : i32} : () -> i32

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3ab37f0) {
  %4 = "arith.constant"() {value = 3 : i64} : () -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.mlir.undef'(0x3ab38b0) {
  %5 = "llvm.mlir.undef"() : () -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ab8e50) {
  %6 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 9>} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, !llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3aff4d0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ab8e50)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3aff4d0) {
      %6 = "llvm.getelementptr"(%arg0) {rawConstantIndices = array<i32: 0, 9>} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3aba000) {
  %8 = "rmem.llvm.load"(%7) : (!llvm.ptr<i64>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3b02040)
    ** Replace : 'rmem.llvm.load'(0x3aba000)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3b02040) {
      %8 = "llvm.load"(%6) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x3aba0f0) {
  %10 = "arith.cmpi"(%9, %4) {predicate = 5 : i64} : (i64, i64) -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x3ac3730) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3aba280) {
  "scf.yield"() : () -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.mlir.addressof'(0x3a41530) {
  %26 = "llvm.mlir.addressof"() {global_name = @str0} : () -> !llvm.ptr<array<20 x i8>>

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.getelementptr'(0x3a41c80) {
  %27 = "llvm.getelementptr"(%26) {rawConstantIndices = array<i32: 0, 0>} : (!llvm.ptr<array<20 x i8>>) -> !llvm.ptr<i8>

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.mlir.addressof'(0x3a41d70) {
  %28 = "llvm.mlir.addressof"() {global_name = @str1} : () -> !llvm.ptr<array<11 x i8>>

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.getelementptr'(0x3ac0a60) {
  %29 = "llvm.getelementptr"(%28) {rawConstantIndices = array<i32: 0, 0>} : (!llvm.ptr<array<11 x i8>>) -> !llvm.ptr<i8>

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.mlir.addressof'(0x3ac2040) {
  %30 = "llvm.mlir.addressof"() {global_name = @str2} : () -> !llvm.ptr<array<30 x i8>>

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.getelementptr'(0x3ac2100) {
  %31 = "llvm.getelementptr"(%30) {rawConstantIndices = array<i32: 0, 0>} : (!llvm.ptr<array<30 x i8>>) -> !llvm.ptr<i8>

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.call'(0x3aaef20) {
  "llvm.call"(%27, %29, %3, %31) {callee = @__assert_fail, fastmathFlags = #llvm.fastmath<none>} : (!llvm.ptr<i8>, !llvm.ptr<i8>, i32, !llvm.ptr<i8>) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3ac36d0) {
  "scf.yield"() : () -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ac3980) {
  %11 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 4>} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3b02c70)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ac3980)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3b02c70) {
      %11 = "llvm.getelementptr"(%arg0) {rawConstantIndices = array<i32: 0, 4>} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3ac3a10) {
  %13 = "rmem.llvm.load"(%7) : (!llvm.ptr<i64>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3b02550)
    ** Replace : 'rmem.llvm.load'(0x3ac3a10)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3b02550) {
      %13 = "llvm.load"(%6) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3ac3aa0) {
  %15 = "rmem.llvm.load"(%12) : (!llvm.ptr<i64>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3b08d80)
    ** Replace : 'rmem.llvm.load'(0x3ac3aa0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3b08d80) {
      %15 = "llvm.load"(%11) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x3aaf050) {
  %17 = "arith.addi"(%16, %14) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3a7e590) {
  "rmem.llvm.store"(%17, %12) : (i64, !llvm.ptr<i64>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.store'(0x3b50cf0)
    ** Replace : 'rmem.llvm.store'(0x3a7e590)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3b50cf0) {
      "llvm.store"(%17, %11) : (i64, !llvm.ptr<i64>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3aabc80) {
  %18 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 8>} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bd62c0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3aabc80)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bd62c0) {
      %18 = "llvm.getelementptr"(%arg0) {rawConstantIndices = array<i32: 0, 8>} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3aabd10) {
  %20 = "rmem.llvm.load"(%7) : (!llvm.ptr<i64>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bd6350)
    ** Replace : 'rmem.llvm.load'(0x3aabd10)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bd6350) {
      %20 = "llvm.load"(%6) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3aabda0) {
  %22 = "rmem.llvm.load"(%19) : (!llvm.ptr<i64>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3b08cf0)
    ** Replace : 'rmem.llvm.load'(0x3aabda0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3b08cf0) {
      %22 = "llvm.load"(%18) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x3aabe30) {
  %24 = "arith.addi"(%23, %21) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3aabbd0) {
  "rmem.llvm.store"(%24, %19) : (i64, !llvm.ptr<i64>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.store'(0x3ae6170)
    ** Replace : 'rmem.llvm.store'(0x3aabbd0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3ae6170) {
      "llvm.store"(%24, %18) : (i64, !llvm.ptr<i64>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3aadb10) {
  %25 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 23>} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bd63e0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3aadb10)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bd63e0) {
      %25 = "llvm.getelementptr"(%arg0) {rawConstantIndices = array<i32: 0, 23>} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3acd860) {
  %27 = "rmem.llvm.load"(%26) : (!llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bd6c30)
    ** Replace : 'rmem.llvm.load'(0x3acd860)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bd6c30) {
      %27 = "llvm.load"(%25) : (!llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.nullref'(0x3acd930) {
  %29 = "rmem.nullref"() : () -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.nullref -> ()' {
    ** Insert  : 'llvm.mlir.null'(0x3b1e670)
    ** Replace : 'rmem.nullref'(0x3acd930)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.mlir.null'(0x3b1e670) {
      %29 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.addrcmp'(0x3acd9f0) {
  %31 = "rmem.addrcmp"(%28, %30) {predicate = 0 : i64} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> i1

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.addrcmp -> ()' {
    ** Insert  : 'llvm.icmp'(0x3bd8f00)
    ** Replace : 'rmem.addrcmp'(0x3acd9f0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.icmp'(0x3bd8f00) {
      %31 = "llvm.icmp"(%27, %29) {predicate = 0 : i64} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> i1

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.xori'(0x3acdae0) {
  %33 = "arith.xori"(%32, %0) : (i1, i1) -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.select'(0x3acdbf0) {
  %34 = "arith.select"(%32, %2, %5) : (i1, i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x3acfe50) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.mlir.addressof'(0x3acf270) {
  %36 = "llvm.mlir.addressof"() {global_name = @str3} : () -> !llvm.ptr<array<31 x i8>>

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.getelementptr'(0x3acf730) {
  %37 = "llvm.getelementptr"(%36) {rawConstantIndices = array<i32: 0, 0>} : (!llvm.ptr<array<31 x i8>>) -> !llvm.ptr<i8>

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3acf840) {
  %38 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 0>} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> !llvm.ptr<array<200 x i8>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bd6cc0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3acf840)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bd6cc0) {
      %38 = "llvm.getelementptr"(%arg0) {rawConstantIndices = array<i32: 0, 0>} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> !llvm.ptr<array<200 x i8>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3acfa20) {
  %40 = "rmem.llvm.getelementptr"(%39) {structIndices = array<i32: 0, 0>} : (!llvm.ptr<array<200 x i8>>) -> !llvm.ptr<i8>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bd6e30)
    ** Replace : 'rmem.llvm.getelementptr'(0x3acfa20)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bd6e30) {
      %40 = "llvm.getelementptr"(%38) {rawConstantIndices = array<i32: 0, 0>} : (!llvm.ptr<array<200 x i8>>) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.call'(0x3acfab0) {
  %42 = "llvm.call"(%37, %41) {callee = @printf, fastmathFlags = #llvm.fastmath<none>} : (!llvm.ptr<i8>, !llvm.ptr<i8>) -> i32

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.mlir.addressof'(0x3acfbc0) {
  %43 = "llvm.mlir.addressof"() {global_name = @stdout} : () -> !llvm.ptr<ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", opaque>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<struct<"struct._IO_codecvt", opaque>>, ptr<struct<"struct._IO_wide_data", opaque>>, ptr<struct<"struct._IO_FILE">>, ptr<i8>, i64, i32, array<20 x i8>)>>>

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.load'(0x3acfc80) {
  %44 = "llvm.load"(%43) : (!llvm.ptr<ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", opaque>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<struct<"struct._IO_codecvt", opaque>>, ptr<struct<"struct._IO_wide_data", opaque>>, ptr<struct<"struct._IO_FILE">>, ptr<i8>, i64, i32, array<20 x i8>)>>>) -> !llvm.ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", opaque>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<struct<"struct._IO_codecvt", opaque>>, ptr<struct<"struct._IO_wide_data", opaque>>, ptr<struct<"struct._IO_FILE">>, ptr<i8>, i64, i32, array<20 x i8>)>>

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.call'(0x3acfd70) {
  %45 = "func.call"(%44) {callee = @fflush} : (!llvm.ptr<struct<"struct._IO_FILE", (i32, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<i8>, ptr<struct<"struct._IO_marker", opaque>>, ptr<struct<"struct._IO_FILE">>, i32, i32, i64, i16, i8, array<1 x i8>, ptr<i8>, i64, ptr<struct<"struct._IO_codecvt", opaque>>, ptr<struct<"struct._IO_wide_data", opaque>>, ptr<struct<"struct._IO_FILE">>, ptr<i8>, i64, i32, array<20 x i8>)>>) -> i32

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3acf620) {
  "scf.yield"() : () -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.select'(0x3acff10) {
  %35 = "arith.select"(%33, %1, %34) : (i1, i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x3acc000) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.ptr2int'(0x3ad1310) {
  %36 = "rmem.llvm.ptr2int"(%28) : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.ptr2int -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bd8fb0)
    ** Replace : 'rmem.llvm.ptr2int'(0x3ad1310)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bd8fb0) {
      %36 = "llvm.ptrtoint"(%27) : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3ad1480) {
  %38 = "rmem.llvm.load"(%26) : (!llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bd9040)
    ** Replace : 'rmem.llvm.load'(0x3ad1480)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bd9040) {
      %38 = "llvm.load"(%25) : (!llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.ptr2int'(0x3ad1510) {
  %40 = "rmem.llvm.ptr2int"(%39) : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.ptr2int -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bd90d0)
    ** Replace : 'rmem.llvm.ptr2int'(0x3ad1510)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bd90d0) {
      %40 = "llvm.ptrtoint"(%38) : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.subi'(0x3ad15a0) {
  %42 = "arith.subi"(%37, %41) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3aad580) {
  "rmem.llvm.store"(%28, %26) : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.store'(0x3ac89d0)
    ** Replace : 'rmem.llvm.store'(0x3aad580)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3ac89d0) {
      "llvm.store"(%27, %25) : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ad4b60) {
  %43 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 24>} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bd9160)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ad4b60)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bd9160) {
      %43 = "llvm.getelementptr"(%arg0) {rawConstantIndices = array<i32: 0, 24>} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ac7320) {
  %45 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 5>} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bd91f0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ac7320)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bd91f0) {
      %45 = "llvm.getelementptr"(%arg0) {rawConstantIndices = array<i32: 0, 5>} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3ac73b0) {
  %47 = "rmem.llvm.load"(%46) : (!llvm.ptr<i64>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bd9280)
    ** Replace : 'rmem.llvm.load'(0x3ac73b0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bd9280) {
      %47 = "llvm.load"(%45) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ad4bf0) {
  %49 = "rmem.llvm.getelementptr"(%28, %48) {structIndices = array<i32>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bd93d0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ad4bf0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bd93d0) {
      %49 = "llvm.getelementptr"(%27, %47) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3ad4c90) {
  "rmem.llvm.store"(%50, %44) : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.store'(0x3ac8930)
    ** Replace : 'rmem.llvm.store'(0x3ad4c90)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3ac8930) {
      "llvm.store"(%49, %43) : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ac5d60) {
  %51 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 21>} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bd9310)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ac5d60)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bd9310) {
      %51 = "llvm.getelementptr"(%arg0) {rawConstantIndices = array<i32: 0, 21>} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3ac5f40) {
  %53 = "rmem.llvm.load"(%52) : (!llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>) -> !llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bd9480)
    ** Replace : 'rmem.llvm.load'(0x3ac5f40)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bd9480) {
      %53 = "llvm.load"(%51) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ac61b0) {
  %55 = "rmem.llvm.getelementptr"(%54) {structIndices = array<i32: 1>} : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>) -> !llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3b07960)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ac61b0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3b07960) {
      %55 = "llvm.getelementptr"(%53) {rawConstantIndices = array<i32: 1>} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3acbcb0) {
  %57 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 22>} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3b079f0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3acbcb0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3b079f0) {
      %57 = "llvm.getelementptr"(%arg0) {rawConstantIndices = array<i32: 0, 22>} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3acbda0) {
  %59 = "rmem.llvm.load"(%58) : (!llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>) -> !llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3b07a80)
    ** Replace : 'rmem.llvm.load'(0x3acbda0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3b07a80) {
      %59 = "llvm.load"(%57) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.while'(0x39f2500) {
  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'scf.while -> ()' {
    ** Insert  : 'scf.while'(0x3b07b10)
    ** Replace : 'scf.while'(0x39f2500)

    //===-------------------------------------------===//
    Legalizing operation : 'scf.while'(0x3b07b10) {
    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.addrcmp'(0x3acc1d0) {
  %63 = "rmem.addrcmp"(<<UNKNOWN SSA VALUE>>, %60) {predicate = 6 : i64} : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>) -> i1

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.addrcmp -> ()' {
    ** Insert  : 'llvm.icmp'(0x3b07bd0)
    ** Replace : 'rmem.addrcmp'(0x3acc1d0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.icmp'(0x3b07bd0) {
      %63 = "llvm.icmp"(%arg1, %59) {predicate = 6 : i64} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> i1

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.condition'(0x3ac5e90) {
  "scf.condition"(%64, <<UNKNOWN SSA VALUE>>) : (i1, !llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'scf.condition -> ()' {
    ** Insert  : 'scf.condition'(0x3ae1fd0)
    ** Replace : 'scf.condition'(0x3ac5e90)

    //===-------------------------------------------===//
    Legalizing operation : 'scf.condition'(0x3ae1fd0) {
      "scf.condition"(%63, %arg1) : (i1, !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ae8610) {
  %63 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 3>} : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>) -> !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bd6d50)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ae8610)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bd6d50) {
      %63 = "llvm.getelementptr"(%arg1) {rawConstantIndices = array<i32: 0, 3>} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3ae96b0) {
  %65 = "rmem.llvm.load"(%64) : (!llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>) -> !llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3b086a0)
    ** Replace : 'rmem.llvm.load'(0x3ae96b0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3b086a0) {
      %65 = "llvm.load"(%63) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.addrcmp'(0x3ae9780) {
  %67 = "rmem.addrcmp"(%66, %54) {predicate = 1 : i64} : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>) -> i1

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.addrcmp -> ()' {
    ** Insert  : 'llvm.icmp'(0x3b087c0)
    ** Replace : 'rmem.addrcmp'(0x3ae9780)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.icmp'(0x3b087c0) {
      %67 = "llvm.icmp"(%65, %53) {predicate = 1 : i64} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> i1

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x3aaecf0) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3aeb160) {
  %70 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 6>} : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>) -> !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3b08730)
    ** Replace : 'rmem.llvm.getelementptr'(0x3aeb160)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3b08730) {
      %70 = "llvm.getelementptr"(%arg1) {rawConstantIndices = array<i32: 0, 6>} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3aeb330) {
  %72 = "rmem.llvm.load"(%71) : (!llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3b08870)
    ** Replace : 'rmem.llvm.load'(0x3aeb330)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3b08870) {
      %72 = "llvm.load"(%70) : (!llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.ptr2int'(0x3aec430) {
  %74 = "rmem.llvm.ptr2int"(%73) : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.ptr2int -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3b08900)
    ** Replace : 'rmem.llvm.ptr2int'(0x3aec430)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3b08900) {
      %74 = "llvm.ptrtoint"(%72) : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x3aaedb0) {
  %76 = "arith.addi"(%75, %42) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.int2ptr'(0x3aeda50) {
  %77 = "rmem.llvm.int2ptr"(%76) : (i64) -> !llvm.ptr<struct<"struct.arc", (i64, ptr<struct<"struct.node", (i64, i32, ptr<struct<"struct.node">>, ptr<struct<"struct.node">>, ptr<struct<"struct.node">>, ptr<struct<"struct.node">>, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, i64, i64, i32, i32)>>, ptr<struct<"struct.node", (i64, i32, ptr<struct<"struct.node">>, ptr<struct<"struct.node">>, ptr<struct<"struct.node">>, ptr<struct<"struct.node">>, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, i64, i64)>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.int2ptr -> ()' {
    ** Insert  : 'llvm.inttoptr'(0x3b08990)
    ** Replace : 'rmem.llvm.int2ptr'(0x3aeda50)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.inttoptr'(0x3b08990) {
      %77 = "llvm.inttoptr"(%76) : (i64) -> !llvm.ptr<struct<"struct.arc", (i64, ptr<struct<"struct.node", (i64, i32, ptr<struct<"struct.node">>, ptr<struct<"struct.node">>, ptr<struct<"struct.node">>, ptr<struct<"struct.node">>, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, i64, i64, i32, i32)>>, ptr<struct<"struct.node", (i64, i32, ptr<struct<"struct.node">>, ptr<struct<"struct.node">>, ptr<struct<"struct.node">>, ptr<struct<"struct.node">>, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3ad13d0) {
  "rmem.llvm.store"(%78, %71) : (!llvm.ptr<struct<"struct.arc", (i64, ptr<struct<"struct.node", (i64, i32, ptr<struct<"struct.node">>, ptr<struct<"struct.node">>, ptr<struct<"struct.node">>, ptr<struct<"struct.node">>, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, i64, i64, i32, i32)>>, ptr<struct<"struct.node", (i64, i32, ptr<struct<"struct.node">>, ptr<struct<"struct.node">>, ptr<struct<"struct.node">>, ptr<struct<"struct.node">>, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, i64, i64)>>, !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.store'(0x3a7a1c0)
    ** Replace : 'rmem.llvm.store'(0x3ad13d0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3a7a1c0) {
      "llvm.store"(%77, %70) : (!llvm.ptr<struct<"struct.arc", (i64, ptr<struct<"struct.node", (i64, i32, ptr<struct<"struct.node">>, ptr<struct<"struct.node">>, ptr<struct<"struct.node">>, ptr<struct<"struct.node">>, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, i64, i64, i32, i32)>>, ptr<struct<"struct.node", (i64, i32, ptr<struct<"struct.node">>, ptr<struct<"struct.node">>, ptr<struct<"struct.node">>, ptr<struct<"struct.node">>, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"struct.arc">>, ptr<struct<"struct.arc">>, i64, i64)>>, !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3aeb220) {
  "scf.yield"() : () -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3aeec30) {
  %69 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 1>} : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>) -> !llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bda8b0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3aeec30)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bda8b0) {
      %69 = "llvm.getelementptr"(%arg1) {rawConstantIndices = array<i32: 1>} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3aaee50) {
  "scf.yield"(%70) : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'scf.yield -> ()' {
    ** Insert  : 'scf.yield'(0x3a57c90)
    ** Replace : 'scf.yield'(0x3aaee50)

    //===-------------------------------------------===//
    Legalizing operation : 'scf.yield'(0x3a57c90) {
      "scf.yield"(%69) : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3ae9860) {
  "scf.yield"() : () -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.return'(0x3aeb280) {
  "func.return"(%35) : (i64) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.func'(0x3a41d00) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.func'(0x3ab3840) {
  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'func.func -> ()' {
    ** Insert  : 'func.func'(0x3ac7a20)
    ** Erase   : 'func.func'(0x3ab3840)

    //===-------------------------------------------===//
    Legalizing operation : 'func.func'(0x3ac7a20) {
    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3ab3910) {
  %0 = "arith.constant"() {value = -1 : i64} : () -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3aba090) {
  %1 = "arith.constant"() {value = false} : () -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3ab25f0) {
  %2 = "arith.constant"() {value = 2 : i64} : () -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3ac2190) {
  %3 = "arith.constant"() {value = 0 : i64} : () -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3aba1a0) {
  %4 = "arith.constant"() {value = 1 : i64} : () -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3acdcc0) {
  %5 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>, <<UNKNOWN SSA VALUE>>) {structIndices = array<i32>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3b081c0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3acdcc0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3b081c0) {
      %5 = "llvm.getelementptr"(%arg0, %arg1) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ac57e0) {
  %7 = "rmem.llvm.getelementptr"(%6) {structIndices = array<i32: 0, 1>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bd72d0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ac57e0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bd72d0) {
      %7 = "llvm.getelementptr"(%5) {rawConstantIndices = array<i32: 0, 1>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3aeeb80) {
  "rmem.llvm.store"(<<UNKNOWN SSA VALUE>>, %8) : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3b08270)
    ** Insert  : 'llvm.call'(0x3bd89d0)
    ** Insert  : 'llvm.call'(0x3bd8a60)
    ** Insert  : 'llvm.bitcast'(0x3b083d0)
    ** Insert  : 'llvm.store'(0x3b08a10)
    ** Replace : 'rmem.llvm.store'(0x3aeeb80)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3b08270) {
      %9 = "llvm.ptrtoint"(%7) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bd89d0) {
      %10 = "llvm.call"(%9) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bd8a60) {
      %11 = "llvm.call"(%10) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3b083d0) {
      %12 = "llvm.bitcast"(%11) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3b08a10) {
      "llvm.store"(%arg2, %12) : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ae84e0) {
  %13 = "rmem.llvm.getelementptr"(%6) {structIndices = array<i32: 0, 2>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3b08460)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ae84e0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3b08460) {
      %13 = "llvm.getelementptr"(%5) {rawConstantIndices = array<i32: 0, 2>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3ae8020) {
  "rmem.llvm.store"(<<UNKNOWN SSA VALUE>>, %14) : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bda4d0)
    ** Insert  : 'llvm.call'(0x3bda560)
    ** Insert  : 'llvm.call'(0x3bda5f0)
    ** Insert  : 'llvm.bitcast'(0x3bda680)
    ** Insert  : 'llvm.store'(0x3bda700)
    ** Replace : 'rmem.llvm.store'(0x3ae8020)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bda4d0) {
      %15 = "llvm.ptrtoint"(%13) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bda560) {
      %16 = "llvm.call"(%15) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bda5f0) {
      %17 = "llvm.call"(%16) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bda680) {
      %18 = "llvm.bitcast"(%17) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3bda700) {
      "llvm.store"(%arg3, %18) : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ad8a70) {
  %19 = "rmem.llvm.getelementptr"(%6) {structIndices = array<i32: 0, 7>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i64>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bda7b0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ad8a70)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bda7b0) {
      %19 = "llvm.getelementptr"(%5) {rawConstantIndices = array<i32: 0, 7>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3ae8560) {
  "rmem.llvm.store"(<<UNKNOWN SSA VALUE>>, %20) : (i64, !rmem.rmref<1, !llvm.ptr<i64>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be1160)
    ** Insert  : 'llvm.call'(0x3bde930)
    ** Insert  : 'llvm.call'(0x3bde9c0)
    ** Insert  : 'llvm.bitcast'(0x3bdea50)
    ** Insert  : 'llvm.store'(0x3bdead0)
    ** Replace : 'rmem.llvm.store'(0x3ae8560)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be1160) {
      %21 = "llvm.ptrtoint"(%19) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bde930) {
      %22 = "llvm.call"(%21) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bde9c0) {
      %23 = "llvm.call"(%22) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bdea50) {
      %24 = "llvm.bitcast"(%23) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3bdead0) {
      "llvm.store"(%arg4, %24) : (i64, !llvm.ptr<i64>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ad8ba0) {
  %25 = "rmem.llvm.getelementptr"(%6) {structIndices = array<i32: 0, 0>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i64>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bdeb80)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ad8ba0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bdeb80) {
      %25 = "llvm.getelementptr"(%5) {rawConstantIndices = array<i32: 0, 0>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3ad8af0) {
  "rmem.llvm.store"(<<UNKNOWN SSA VALUE>>, %26) : (i64, !rmem.rmref<1, !llvm.ptr<i64>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bdec10)
    ** Insert  : 'llvm.call'(0x3bdeca0)
    ** Insert  : 'llvm.call'(0x3bded30)
    ** Insert  : 'llvm.bitcast'(0x3bdedc0)
    ** Insert  : 'llvm.store'(0x3bdee40)
    ** Replace : 'rmem.llvm.store'(0x3ad8af0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bdec10) {
      %27 = "llvm.ptrtoint"(%25) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bdeca0) {
      %28 = "llvm.call"(%27) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bded30) {
      %29 = "llvm.call"(%28) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bdedc0) {
      %30 = "llvm.bitcast"(%29) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3bdee40) {
      "llvm.store"(%arg4, %30) : (i64, !llvm.ptr<i64>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ae1dd0) {
  %31 = "rmem.llvm.getelementptr"(%6) {structIndices = array<i32: 0, 6>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i64>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bdeef0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ae1dd0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bdeef0) {
      %31 = "llvm.getelementptr"(%5) {rawConstantIndices = array<i32: 0, 6>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3ad8c40) {
  "rmem.llvm.store"(<<UNKNOWN SSA VALUE>>, %32) : (i64, !rmem.rmref<1, !llvm.ptr<i64>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bdef80)
    ** Insert  : 'llvm.call'(0x3bdf010)
    ** Insert  : 'llvm.call'(0x3bdf0a0)
    ** Insert  : 'llvm.bitcast'(0x3bdf130)
    ** Insert  : 'llvm.store'(0x3bdf1b0)
    ** Replace : 'rmem.llvm.store'(0x3ad8c40)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bdef80) {
      %33 = "llvm.ptrtoint"(%31) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bdf010) {
      %34 = "llvm.call"(%33) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bdf0a0) {
      %35 = "llvm.call"(%34) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bdf130) {
      %36 = "llvm.bitcast"(%35) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3bdf1b0) {
      "llvm.store"(%arg5, %36) : (i64, !llvm.ptr<i64>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x3ae1e80) {
  %37 = "arith.addi"(<<UNKNOWN SSA VALUE>>, %4) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.while'(0x3ae2b50) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x3ae20e0) {
  %39 = "arith.addi"(%arg6, %0) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x3ae21b0) {
  %40 = "arith.cmpi"(%39, %3) {predicate = 1 : i64} : (i64, i64) -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x3ae23e0) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.divsi'(0x3ae22e0) {
  %42 = "arith.divsi"(%arg6, %2) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x3ae24d0) {
  %43 = "arith.addi"(%42, %0) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ae26a0) {
  %44 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>, %43) {structIndices = array<i32>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bdf2f0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ae26a0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bdf2f0) {
      %44 = "llvm.getelementptr"(%arg0, %43) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ae27b0) {
  %46 = "rmem.llvm.getelementptr"(%45) {structIndices = array<i32: 0, 6>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i64>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bdf260)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ae27b0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bdf260) {
      %46 = "llvm.getelementptr"(%44) {rawConstantIndices = array<i32: 0, 6>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3ae2880) {
  %48 = "rmem.llvm.load"(%47) : (!rmem.rmref<1, !llvm.ptr<i64>>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bdf3a0)
    ** Insert  : 'llvm.call'(0x3bdf430)
    ** Insert  : 'llvm.call'(0x3bdf4c0)
    ** Insert  : 'llvm.bitcast'(0x3bdf550)
    ** Insert  : 'llvm.load'(0x3bdf5e0)
    ** Replace : 'rmem.llvm.load'(0x3ae2880)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bdf3a0) {
      %48 = "llvm.ptrtoint"(%46) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bdf430) {
      %49 = "llvm.call"(%48) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bdf4c0) {
      %50 = "llvm.call"(%49) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bdf550) {
      %51 = "llvm.bitcast"(%50) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bdf5e0) {
      %52 = "llvm.load"(%51) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x3ae2970) {
  %54 = "arith.cmpi"(<<UNKNOWN SSA VALUE>>, %53) {predicate = 4 : i64} : (i64, i64) -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.select'(0x3ae2a80) {
  %55 = "arith.select"(%54, %42, %arg6) : (i1, i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x3ac8740) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ae2cd0) {
  %56 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>, %39) {structIndices = array<i32>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bdf700)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ae2cd0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bdf700) {
      %56 = "llvm.getelementptr"(%arg0, %39) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ac7560) {
  %58 = "rmem.llvm.getelementptr"(%57) {structIndices = array<i32: 0, 1>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bdf670)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ac7560)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bdf670) {
      %58 = "llvm.getelementptr"(%56) {rawConstantIndices = array<i32: 0, 1>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ac7650) {
  %60 = "rmem.llvm.getelementptr"(%45) {structIndices = array<i32: 0, 1>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bdf7b0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ac7650)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bdf7b0) {
      %60 = "llvm.getelementptr"(%44) {rawConstantIndices = array<i32: 0, 1>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3ac7740) {
  %62 = "rmem.llvm.load"(%61) : (!rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>) -> !llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bdf840)
    ** Insert  : 'llvm.call'(0x3bdf8d0)
    ** Insert  : 'llvm.call'(0x3bdf960)
    ** Insert  : 'llvm.bitcast'(0x3bdf9f0)
    ** Insert  : 'llvm.load'(0x3bdfa80)
    ** Replace : 'rmem.llvm.load'(0x3ac7740)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bdf840) {
      %62 = "llvm.ptrtoint"(%60) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bdf8d0) {
      %63 = "llvm.call"(%62) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bdf960) {
      %64 = "llvm.call"(%63) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bdf9f0) {
      %65 = "llvm.bitcast"(%64) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bdfa80) {
      %66 = "llvm.load"(%65) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3ae25f0) {
  "rmem.llvm.store"(%67, %59) : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bdfb10)
    ** Insert  : 'llvm.call'(0x3bdfba0)
    ** Insert  : 'llvm.call'(0x3bdfc30)
    ** Insert  : 'llvm.bitcast'(0x3bdfcc0)
    ** Insert  : 'llvm.store'(0x3bdfd40)
    ** Replace : 'rmem.llvm.store'(0x3ae25f0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bdfb10) {
      %68 = "llvm.ptrtoint"(%58) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bdfba0) {
      %69 = "llvm.call"(%68) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bdfc30) {
      %70 = "llvm.call"(%69) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bdfcc0) {
      %71 = "llvm.bitcast"(%70) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3bdfd40) {
      "llvm.store"(%66, %71) : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ac78d0) {
  %72 = "rmem.llvm.getelementptr"(%57) {structIndices = array<i32: 0, 2>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bdfdf0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ac78d0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bdfdf0) {
      %72 = "llvm.getelementptr"(%56) {rawConstantIndices = array<i32: 0, 2>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ac79a0) {
  %74 = "rmem.llvm.getelementptr"(%45) {structIndices = array<i32: 0, 2>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3be3210)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ac79a0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3be3210) {
      %74 = "llvm.getelementptr"(%44) {rawConstantIndices = array<i32: 0, 2>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3ac7a90) {
  %76 = "rmem.llvm.load"(%75) : (!rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>) -> !llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be32a0)
    ** Insert  : 'llvm.call'(0x3be0690)
    ** Insert  : 'llvm.call'(0x3be0720)
    ** Insert  : 'llvm.bitcast'(0x3be07b0)
    ** Insert  : 'llvm.load'(0x3be0840)
    ** Replace : 'rmem.llvm.load'(0x3ac7a90)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be32a0) {
      %76 = "llvm.ptrtoint"(%74) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be0690) {
      %77 = "llvm.call"(%76) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be0720) {
      %78 = "llvm.call"(%77) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be07b0) {
      %79 = "llvm.bitcast"(%78) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3be0840) {
      %80 = "llvm.load"(%79) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3ac7820) {
  "rmem.llvm.store"(%81, %73) : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be3330)
    ** Insert  : 'llvm.call'(0x3be09c0)
    ** Insert  : 'llvm.call'(0x3be0a50)
    ** Insert  : 'llvm.bitcast'(0x3be0ae0)
    ** Insert  : 'llvm.store'(0x3be0b60)
    ** Replace : 'rmem.llvm.store'(0x3ac7820)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be3330) {
      %82 = "llvm.ptrtoint"(%72) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be09c0) {
      %83 = "llvm.call"(%82) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be0a50) {
      %84 = "llvm.call"(%83) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be0ae0) {
      %85 = "llvm.bitcast"(%84) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3be0b60) {
      "llvm.store"(%80, %85) : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ac7c20) {
  %86 = "rmem.llvm.getelementptr"(%57) {structIndices = array<i32: 0, 0>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i64>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3be3020)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ac7c20)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3be3020) {
      %86 = "llvm.getelementptr"(%56) {rawConstantIndices = array<i32: 0, 0>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ac7cb0) {
  %88 = "rmem.llvm.getelementptr"(%45) {structIndices = array<i32: 0, 0>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i64>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3be30b0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ac7cb0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3be30b0) {
      %88 = "llvm.getelementptr"(%44) {rawConstantIndices = array<i32: 0, 0>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3ac7d80) {
  %90 = "rmem.llvm.load"(%89) : (!rmem.rmref<1, !llvm.ptr<i64>>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be3140)
    ** Insert  : 'llvm.call'(0x3be0c10)
    ** Insert  : 'llvm.call'(0x3be0ca0)
    ** Insert  : 'llvm.bitcast'(0x3be0d30)
    ** Insert  : 'llvm.load'(0x3be0dc0)
    ** Replace : 'rmem.llvm.load'(0x3ac7d80)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be3140) {
      %90 = "llvm.ptrtoint"(%88) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be0c10) {
      %91 = "llvm.call"(%90) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be0ca0) {
      %92 = "llvm.call"(%91) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be0d30) {
      %93 = "llvm.bitcast"(%92) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3be0dc0) {
      %94 = "llvm.load"(%93) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3ac7b70) {
  "rmem.llvm.store"(%95, %87) : (i64, !rmem.rmref<1, !llvm.ptr<i64>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be0e50)
    ** Insert  : 'llvm.call'(0x3be0ee0)
    ** Insert  : 'llvm.call'(0x3be0f70)
    ** Insert  : 'llvm.bitcast'(0x3be1000)
    ** Insert  : 'llvm.store'(0x3be1080)
    ** Replace : 'rmem.llvm.store'(0x3ac7b70)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be0e50) {
      %96 = "llvm.ptrtoint"(%86) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be0ee0) {
      %97 = "llvm.call"(%96) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be0f70) {
      %98 = "llvm.call"(%97) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be1000) {
      %99 = "llvm.bitcast"(%98) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3be1080) {
      "llvm.store"(%94, %99) : (i64, !llvm.ptr<i64>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ac7f30) {
  %100 = "rmem.llvm.getelementptr"(%57) {structIndices = array<i32: 0, 7>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i64>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3be51f0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ac7f30)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3be51f0) {
      %100 = "llvm.getelementptr"(%56) {rawConstantIndices = array<i32: 0, 7>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3ac8000) {
  %102 = "rmem.llvm.load"(%89) : (!rmem.rmref<1, !llvm.ptr<i64>>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be2f10)
    ** Insert  : 'llvm.call'(0x3be18f0)
    ** Insert  : 'llvm.call'(0x3be1980)
    ** Insert  : 'llvm.bitcast'(0x3be1a10)
    ** Insert  : 'llvm.load'(0x3be1aa0)
    ** Replace : 'rmem.llvm.load'(0x3ac8000)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be2f10) {
      %102 = "llvm.ptrtoint"(%88) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be18f0) {
      %103 = "llvm.call"(%102) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be1980) {
      %104 = "llvm.call"(%103) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be1a10) {
      %105 = "llvm.bitcast"(%104) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3be1aa0) {
      %106 = "llvm.load"(%105) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3ac7e80) {
  "rmem.llvm.store"(%107, %101) : (i64, !rmem.rmref<1, !llvm.ptr<i64>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be1b30)
    ** Insert  : 'llvm.call'(0x3be1bc0)
    ** Insert  : 'llvm.call'(0x3be1c50)
    ** Insert  : 'llvm.bitcast'(0x3be1ce0)
    ** Insert  : 'llvm.store'(0x3be1d60)
    ** Replace : 'rmem.llvm.store'(0x3ac7e80)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be1b30) {
      %108 = "llvm.ptrtoint"(%100) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be1bc0) {
      %109 = "llvm.call"(%108) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be1c50) {
      %110 = "llvm.call"(%109) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be1ce0) {
      %111 = "llvm.bitcast"(%110) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3be1d60) {
      "llvm.store"(%106, %111) : (i64, !llvm.ptr<i64>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ac81b0) {
  %112 = "rmem.llvm.getelementptr"(%57) {structIndices = array<i32: 0, 6>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i64>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3be1e10)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ac81b0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3be1e10) {
      %112 = "llvm.getelementptr"(%56) {rawConstantIndices = array<i32: 0, 6>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3ac7460) {
  %114 = "rmem.llvm.load"(%47) : (!rmem.rmref<1, !llvm.ptr<i64>>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be1ea0)
    ** Insert  : 'llvm.call'(0x3be1f30)
    ** Insert  : 'llvm.call'(0x3be1fc0)
    ** Insert  : 'llvm.bitcast'(0x3be2050)
    ** Insert  : 'llvm.load'(0x3be20e0)
    ** Replace : 'rmem.llvm.load'(0x3ac7460)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be1ea0) {
      %114 = "llvm.ptrtoint"(%46) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be1f30) {
      %115 = "llvm.call"(%114) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be1fc0) {
      %116 = "llvm.call"(%115) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be2050) {
      %117 = "llvm.bitcast"(%116) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3be20e0) {
      %118 = "llvm.load"(%117) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3ac8100) {
  "rmem.llvm.store"(%119, %113) : (i64, !rmem.rmref<1, !llvm.ptr<i64>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be08d0)
    ** Insert  : 'llvm.call'(0x3be2230)
    ** Insert  : 'llvm.call'(0x3be22c0)
    ** Insert  : 'llvm.bitcast'(0x3be2350)
    ** Insert  : 'llvm.store'(0x3be23d0)
    ** Replace : 'rmem.llvm.store'(0x3ac8100)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be08d0) {
      %120 = "llvm.ptrtoint"(%112) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be2230) {
      %121 = "llvm.call"(%120) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be22c0) {
      %122 = "llvm.call"(%121) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be2350) {
      %123 = "llvm.bitcast"(%122) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3be23d0) {
      "llvm.store"(%118, %123) : (i64, !llvm.ptr<i64>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3ac8410) {
  "rmem.llvm.store"(<<UNKNOWN SSA VALUE>>, %61) : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be4e50)
    ** Insert  : 'llvm.call'(0x3be4ee0)
    ** Insert  : 'llvm.call'(0x3be4f70)
    ** Insert  : 'llvm.bitcast'(0x3be5000)
    ** Insert  : 'llvm.store'(0x3be5080)
    ** Replace : 'rmem.llvm.store'(0x3ac8410)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be4e50) {
      %124 = "llvm.ptrtoint"(%60) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be4ee0) {
      %125 = "llvm.call"(%124) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be4f70) {
      %126 = "llvm.call"(%125) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be5000) {
      %127 = "llvm.bitcast"(%126) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3be5080) {
      "llvm.store"(%arg2, %127) : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3ac84d0) {
  "rmem.llvm.store"(<<UNKNOWN SSA VALUE>>, %75) : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be5130)
    ** Insert  : 'llvm.call'(0x3be2480)
    ** Insert  : 'llvm.call'(0x3be2510)
    ** Insert  : 'llvm.bitcast'(0x3be25a0)
    ** Insert  : 'llvm.store'(0x3be2620)
    ** Replace : 'rmem.llvm.store'(0x3ac84d0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be5130) {
      %128 = "llvm.ptrtoint"(%74) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be2480) {
      %129 = "llvm.call"(%128) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be2510) {
      %130 = "llvm.call"(%129) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be25a0) {
      %131 = "llvm.bitcast"(%130) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3be2620) {
      "llvm.store"(%arg3, %131) : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3a7e4f0) {
  "rmem.llvm.store"(<<UNKNOWN SSA VALUE>>, %89) : (i64, !rmem.rmref<1, !llvm.ptr<i64>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be6290)
    ** Insert  : 'llvm.call'(0x3be26d0)
    ** Insert  : 'llvm.call'(0x3be2760)
    ** Insert  : 'llvm.bitcast'(0x3be27f0)
    ** Insert  : 'llvm.store'(0x3be2870)
    ** Replace : 'rmem.llvm.store'(0x3a7e4f0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be6290) {
      %132 = "llvm.ptrtoint"(%88) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be26d0) {
      %133 = "llvm.call"(%132) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be2760) {
      %134 = "llvm.call"(%133) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be27f0) {
      %135 = "llvm.bitcast"(%134) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3be2870) {
      "llvm.store"(%arg4, %135) : (i64, !llvm.ptr<i64>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ac86c0) {
  %136 = "rmem.llvm.getelementptr"(%45) {structIndices = array<i32: 0, 7>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i64>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3be4be0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ac86c0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3be4be0) {
      %136 = "llvm.getelementptr"(%44) {rawConstantIndices = array<i32: 0, 7>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3ac8610) {
  "rmem.llvm.store"(<<UNKNOWN SSA VALUE>>, %137) : (i64, !rmem.rmref<1, !llvm.ptr<i64>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be4c70)
    ** Insert  : 'llvm.call'(0x3be4d00)
    ** Insert  : 'llvm.call'(0x3be4d90)
    ** Insert  : 'llvm.bitcast'(0x3be2920)
    ** Insert  : 'llvm.store'(0x3be29a0)
    ** Replace : 'rmem.llvm.store'(0x3ac8610)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be4c70) {
      %138 = "llvm.ptrtoint"(%136) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be4d00) {
      %139 = "llvm.call"(%138) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be4d90) {
      %140 = "llvm.call"(%139) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be2920) {
      %141 = "llvm.bitcast"(%140) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3be29a0) {
      "llvm.store"(%arg4, %141) : (i64, !llvm.ptr<i64>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3ac8570) {
  "rmem.llvm.store"(<<UNKNOWN SSA VALUE>>, %47) : (i64, !rmem.rmref<1, !llvm.ptr<i64>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be2a50)
    ** Insert  : 'llvm.call'(0x3be2ae0)
    ** Insert  : 'llvm.call'(0x3be2b70)
    ** Insert  : 'llvm.bitcast'(0x3be2c00)
    ** Insert  : 'llvm.store'(0x3be2c80)
    ** Replace : 'rmem.llvm.store'(0x3ac8570)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be2a50) {
      %142 = "llvm.ptrtoint"(%46) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be2ae0) {
      %143 = "llvm.call"(%142) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be2b70) {
      %144 = "llvm.call"(%143) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be2c00) {
      %145 = "llvm.bitcast"(%144) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3be2c80) {
      "llvm.store"(%arg5, %145) : (i64, !llvm.ptr<i64>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3ab1440) {
  "scf.yield"() : () -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3a7e450) {
  "scf.yield"(%54, %55) : (i1, i64) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3a7b7f0) {
  "scf.yield"(%1, %arg6) : (i1, i64) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.condition'(0x3a7b750) {
  "scf.condition"(%41#0, %41#1) : (i1, i64) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3acf8c0) {
  "scf.yield"(%arg6) : (i64) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.return'(0x3acd980) {
  "func.return"() : () -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.func'(0x3acfd00) {
  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'func.func -> ()' {
    ** Insert  : 'func.func'(0x3b1d310)
    ** Erase   : 'func.func'(0x3acfd00)

    //===-------------------------------------------===//
    Legalizing operation : 'func.func'(0x3b1d310) {
    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3acfe00) {
  %0 = "arith.constant"() {value = -1 : i64} : () -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3acdb90) {
  %1 = "arith.constant"() {value = 2 : i64} : () -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3ac20a0) {
  %2 = "arith.constant"() {value = false} : () -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3ac0af0) {
  %3 = "arith.constant"() {value = 3 : i32} : () -> i32

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3ac8090) {
  %4 = "arith.constant"() {value = 2 : i32} : () -> i32

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3ac5e10) {
  %5 = "arith.constant"() {value = 1 : i64} : () -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ac9140) {
  %6 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 1>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3be5f70)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ac9140)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3be5f70) {
      %6 = "llvm.getelementptr"(%arg1) {rawConstantIndices = array<i32: 0, 1>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3aec4b0) {
  "rmem.llvm.store"(<<UNKNOWN SSA VALUE>>, %7) : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be6000)
    ** Insert  : 'llvm.call'(0x3be6090)
    ** Insert  : 'llvm.call'(0x3be6120)
    ** Insert  : 'llvm.bitcast'(0x3be61b0)
    ** Insert  : 'llvm.store'(0x3a77740)
    ** Replace : 'rmem.llvm.store'(0x3aec4b0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be6000) {
      %8 = "llvm.ptrtoint"(%6) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be6090) {
      %9 = "llvm.call"(%8) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be6120) {
      %10 = "llvm.call"(%9) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be61b0) {
      %11 = "llvm.bitcast"(%10) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3a77740) {
      "llvm.store"(%arg2, %11) : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ac9370) {
  %12 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 2>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3be54f0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ac9370)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3be54f0) {
      %12 = "llvm.getelementptr"(%arg1) {rawConstantIndices = array<i32: 0, 2>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3ac8c40) {
  "rmem.llvm.store"(<<UNKNOWN SSA VALUE>>, %13) : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be7940)
    ** Insert  : 'llvm.call'(0x3be5580)
    ** Insert  : 'llvm.call'(0x3be5610)
    ** Insert  : 'llvm.bitcast'(0x3be56a0)
    ** Insert  : 'llvm.store'(0x3be5720)
    ** Replace : 'rmem.llvm.store'(0x3ac8c40)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be7940) {
      %14 = "llvm.ptrtoint"(%12) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be5580) {
      %15 = "llvm.call"(%14) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be5610) {
      %16 = "llvm.call"(%15) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be56a0) {
      %17 = "llvm.bitcast"(%16) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3be5720) {
      "llvm.store"(%arg3, %17) : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3adfe80) {
  %18 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 7>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i64>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3be5de0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3adfe80)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3be5de0) {
      %18 = "llvm.getelementptr"(%arg1) {rawConstantIndices = array<i32: 0, 7>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3adfdd0) {
  "rmem.llvm.store"(<<UNKNOWN SSA VALUE>>, %19) : (i64, !rmem.rmref<1, !llvm.ptr<i64>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be5e70)
    ** Insert  : 'llvm.call'(0x3be5920)
    ** Insert  : 'llvm.call'(0x3be59b0)
    ** Insert  : 'llvm.bitcast'(0x3be5a40)
    ** Insert  : 'llvm.store'(0x3be5ac0)
    ** Replace : 'rmem.llvm.store'(0x3adfdd0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be5e70) {
      %20 = "llvm.ptrtoint"(%18) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be5920) {
      %21 = "llvm.call"(%20) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be59b0) {
      %22 = "llvm.call"(%21) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be5a40) {
      %23 = "llvm.bitcast"(%22) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3be5ac0) {
      "llvm.store"(%arg4, %23) : (i64, !llvm.ptr<i64>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3adffb0) {
  %24 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 0>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i64>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3be5b70)
    ** Replace : 'rmem.llvm.getelementptr'(0x3adffb0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3be5b70) {
      %24 = "llvm.getelementptr"(%arg1) {rawConstantIndices = array<i32: 0, 0>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3adff00) {
  "rmem.llvm.store"(<<UNKNOWN SSA VALUE>>, %25) : (i64, !rmem.rmref<1, !llvm.ptr<i64>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be5c00)
    ** Insert  : 'llvm.call'(0x3be5c90)
    ** Insert  : 'llvm.call'(0x3be5d20)
    ** Insert  : 'llvm.bitcast'(0x3be6320)
    ** Insert  : 'llvm.store'(0x3be63a0)
    ** Replace : 'rmem.llvm.store'(0x3adff00)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be5c00) {
      %26 = "llvm.ptrtoint"(%24) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be5c90) {
      %27 = "llvm.call"(%26) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be5d20) {
      %28 = "llvm.call"(%27) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be6320) {
      %29 = "llvm.bitcast"(%28) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3be63a0) {
      "llvm.store"(%arg4, %29) : (i64, !llvm.ptr<i64>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ae00e0) {
  %30 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 6>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i64>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3be6450)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ae00e0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3be6450) {
      %30 = "llvm.getelementptr"(%arg1) {rawConstantIndices = array<i32: 0, 6>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3ae0030) {
  "rmem.llvm.store"(<<UNKNOWN SSA VALUE>>, %31) : (i64, !rmem.rmref<1, !llvm.ptr<i64>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be64e0)
    ** Insert  : 'llvm.call'(0x3be6570)
    ** Insert  : 'llvm.call'(0x3be6600)
    ** Insert  : 'llvm.bitcast'(0x3be6690)
    ** Insert  : 'llvm.store'(0x3be6710)
    ** Replace : 'rmem.llvm.store'(0x3ae0030)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be64e0) {
      %32 = "llvm.ptrtoint"(%30) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be6570) {
      %33 = "llvm.call"(%32) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be6600) {
      %34 = "llvm.call"(%33) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be6690) {
      %35 = "llvm.bitcast"(%34) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3be6710) {
      "llvm.store"(%arg5, %35) : (i64, !llvm.ptr<i64>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ae06f0) {
  %36 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 1>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3be67c0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ae06f0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3be67c0) {
      %36 = "llvm.getelementptr"(%arg1) {rawConstantIndices = array<i32: 1>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ae0780) {
  %38 = "rmem.llvm.getelementptr"(%37) {structIndices = array<i32: 0, 6>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i64>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3be7860)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ae0780)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3be7860) {
      %38 = "llvm.getelementptr"(%36) {rawConstantIndices = array<i32: 0, 6>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3ae0810) {
  %40 = "rmem.llvm.load"(%39) : (!rmem.rmref<1, !llvm.ptr<i64>>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be8ff0)
    ** Insert  : 'llvm.call'(0x3bdd590)
    ** Insert  : 'llvm.call'(0x3bdd620)
    ** Insert  : 'llvm.bitcast'(0x3bdd6b0)
    ** Insert  : 'llvm.load'(0x3bdd740)
    ** Replace : 'rmem.llvm.load'(0x3ae0810)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be8ff0) {
      %40 = "llvm.ptrtoint"(%38) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bdd590) {
      %41 = "llvm.call"(%40) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bdd620) {
      %42 = "llvm.call"(%41) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bdd6b0) {
      %43 = "llvm.bitcast"(%42) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bdd740) {
      %44 = "llvm.load"(%43) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ae08a0) {
  %46 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 2>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bdd7d0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ae08a0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bdd7d0) {
      %46 = "llvm.getelementptr"(%arg1) {rawConstantIndices = array<i32: 2>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ae0950) {
  %48 = "rmem.llvm.getelementptr"(%47) {structIndices = array<i32: 0, 6>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i64>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bdd860)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ae0950)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bdd860) {
      %48 = "llvm.getelementptr"(%46) {rawConstantIndices = array<i32: 0, 6>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3ae09e0) {
  %50 = "rmem.llvm.load"(%49) : (!rmem.rmref<1, !llvm.ptr<i64>>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bdd8f0)
    ** Insert  : 'llvm.call'(0x3bdd980)
    ** Insert  : 'llvm.call'(0x3bdda10)
    ** Insert  : 'llvm.bitcast'(0x3bddaa0)
    ** Insert  : 'llvm.load'(0x3bddb30)
    ** Replace : 'rmem.llvm.load'(0x3ae09e0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bdd8f0) {
      %50 = "llvm.ptrtoint"(%48) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bdd980) {
      %51 = "llvm.call"(%50) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bdda10) {
      %52 = "llvm.call"(%51) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bddaa0) {
      %53 = "llvm.bitcast"(%52) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bddb30) {
      %54 = "llvm.load"(%53) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x3ae0ad0) {
  %56 = "arith.cmpi"(%45, %55) {predicate = 4 : i64} : (i64, i64) -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.select'(0x3ae0be0) {
  %57 = "arith.select"(%56, %4, %3) : (i1, i32, i32) -> i32

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.extsi'(0x3ae0d10) {
  %58 = "arith.extsi"(%57) : (i32) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b16100) {
  %59 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 8>} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bddbc0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b16100)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bddbc0) {
      %59 = "llvm.getelementptr"(%arg0) {rawConstantIndices = array<i32: 0, 8>} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.while'(0x3a9e870) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b16270) {
  %62 = "rmem.llvm.load"(%60) : (!llvm.ptr<i64>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bddc50)
    ** Replace : 'rmem.llvm.load'(0x3b16270)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bddc50) {
      %62 = "llvm.load"(%59) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x3b16300) {
  %64 = "arith.cmpi"(%arg6, %63) {predicate = 3 : i64} : (i64, i64) -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x3a415f0) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x3b163b0) {
  %66 = "arith.addi"(%arg6, %0) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b16590) {
  %67 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>, %66) {structIndices = array<i32>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3b085c0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b16590)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3b085c0) {
      %67 = "llvm.getelementptr"(%arg1, %66) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b16680) {
  %69 = "rmem.llvm.getelementptr"(%68) {structIndices = array<i32: 0, 6>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i64>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bddce0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b16680)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bddce0) {
      %69 = "llvm.getelementptr"(%67) {rawConstantIndices = array<i32: 0, 6>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b16750) {
  %71 = "rmem.llvm.load"(%70) : (!rmem.rmref<1, !llvm.ptr<i64>>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be9690)
    ** Insert  : 'llvm.call'(0x3be9080)
    ** Insert  : 'llvm.call'(0x3be9110)
    ** Insert  : 'llvm.bitcast'(0x3be91a0)
    ** Insert  : 'llvm.load'(0x3be9230)
    ** Replace : 'rmem.llvm.load'(0x3b16750)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be9690) {
      %71 = "llvm.ptrtoint"(%69) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be9080) {
      %72 = "llvm.call"(%71) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be9110) {
      %73 = "llvm.call"(%72) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be91a0) {
      %74 = "llvm.bitcast"(%73) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3be9230) {
      %75 = "llvm.load"(%74) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x3b16840) {
  %77 = "arith.cmpi"(<<UNKNOWN SSA VALUE>>, %76) {predicate = 2 : i64} : (i64, i64) -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.select'(0x3b16950) {
  %78 = "arith.select"(%77, %arg6, %arg7) : (i1, i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x3b1ead0) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x3b16b30) {
  %80 = "arith.addi"(%arg7, %0) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b16d90) {
  %81 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>, %80) {structIndices = array<i32>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3be9350)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b16d90)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3be9350) {
      %81 = "llvm.getelementptr"(%arg1, %80) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b16ef0) {
  %83 = "rmem.llvm.getelementptr"(%82) {structIndices = array<i32: 0, 1>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3be92c0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b16ef0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3be92c0) {
      %83 = "llvm.getelementptr"(%81) {rawConstantIndices = array<i32: 0, 1>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b16fe0) {
  %85 = "rmem.llvm.getelementptr"(%68) {structIndices = array<i32: 0, 1>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3be8de0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b16fe0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3be8de0) {
      %85 = "llvm.getelementptr"(%67) {rawConstantIndices = array<i32: 0, 1>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b170d0) {
  %87 = "rmem.llvm.load"(%86) : (!rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>) -> !llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be1800)
    ** Insert  : 'llvm.call'(0x3be8e70)
    ** Insert  : 'llvm.call'(0x3be8f00)
    ** Insert  : 'llvm.bitcast'(0x3be9400)
    ** Insert  : 'llvm.load'(0x3be9490)
    ** Replace : 'rmem.llvm.load'(0x3b170d0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be1800) {
      %87 = "llvm.ptrtoint"(%85) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be8e70) {
      %88 = "llvm.call"(%87) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be8f00) {
      %89 = "llvm.call"(%88) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be9400) {
      %90 = "llvm.bitcast"(%89) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3be9490) {
      %91 = "llvm.load"(%90) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3ae0160) {
  "rmem.llvm.store"(%92, %84) : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be9520)
    ** Insert  : 'llvm.call'(0x3be95b0)
    ** Insert  : 'llvm.call'(0x3be87d0)
    ** Insert  : 'llvm.bitcast'(0x3be8860)
    ** Insert  : 'llvm.store'(0x3be88e0)
    ** Replace : 'rmem.llvm.store'(0x3ae0160)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be9520) {
      %93 = "llvm.ptrtoint"(%83) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be95b0) {
      %94 = "llvm.call"(%93) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be87d0) {
      %95 = "llvm.call"(%94) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be8860) {
      %96 = "llvm.bitcast"(%95) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3be88e0) {
      "llvm.store"(%91, %96) : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b17280) {
  %97 = "rmem.llvm.getelementptr"(%82) {structIndices = array<i32: 0, 2>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3be8990)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b17280)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3be8990) {
      %97 = "llvm.getelementptr"(%81) {rawConstantIndices = array<i32: 0, 2>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b17350) {
  %99 = "rmem.llvm.getelementptr"(%68) {structIndices = array<i32: 0, 2>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3be49e0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b17350)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3be49e0) {
      %99 = "llvm.getelementptr"(%67) {rawConstantIndices = array<i32: 0, 2>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b17440) {
  %101 = "rmem.llvm.load"(%100) : (!rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>) -> !llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be4a70)
    ** Insert  : 'llvm.call'(0x3be4b00)
    ** Insert  : 'llvm.call'(0x3be8a20)
    ** Insert  : 'llvm.bitcast'(0x3be8ab0)
    ** Insert  : 'llvm.load'(0x3be8b40)
    ** Replace : 'rmem.llvm.load'(0x3b17440)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be4a70) {
      %101 = "llvm.ptrtoint"(%99) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be4b00) {
      %102 = "llvm.call"(%101) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be8a20) {
      %103 = "llvm.call"(%102) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be8ab0) {
      %104 = "llvm.bitcast"(%103) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3be8b40) {
      %105 = "llvm.load"(%104) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3b171d0) {
  "rmem.llvm.store"(%106, %98) : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be8bd0)
    ** Insert  : 'llvm.call'(0x3be8c60)
    ** Insert  : 'llvm.call'(0x3be8cf0)
    ** Insert  : 'llvm.bitcast'(0x3be11f0)
    ** Insert  : 'llvm.store'(0x3be1270)
    ** Replace : 'rmem.llvm.store'(0x3b171d0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be8bd0) {
      %107 = "llvm.ptrtoint"(%97) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be8c60) {
      %108 = "llvm.call"(%107) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be8cf0) {
      %109 = "llvm.call"(%108) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be11f0) {
      %110 = "llvm.bitcast"(%109) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3be1270) {
      "llvm.store"(%105, %110) : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b175f0) {
  %111 = "rmem.llvm.getelementptr"(%82) {structIndices = array<i32: 0, 0>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i64>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3be1320)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b175f0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3be1320) {
      %111 = "llvm.getelementptr"(%81) {rawConstantIndices = array<i32: 0, 0>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b176c0) {
  %113 = "rmem.llvm.getelementptr"(%68) {structIndices = array<i32: 0, 0>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i64>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3be13b0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b176c0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3be13b0) {
      %113 = "llvm.getelementptr"(%67) {rawConstantIndices = array<i32: 0, 0>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b17790) {
  %115 = "rmem.llvm.load"(%114) : (!rmem.rmref<1, !llvm.ptr<i64>>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be1440)
    ** Insert  : 'llvm.call'(0x3be14d0)
    ** Insert  : 'llvm.call'(0x3be1560)
    ** Insert  : 'llvm.bitcast'(0x3be15f0)
    ** Insert  : 'llvm.load'(0x3be1680)
    ** Replace : 'rmem.llvm.load'(0x3b17790)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be1440) {
      %115 = "llvm.ptrtoint"(%113) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be14d0) {
      %116 = "llvm.call"(%115) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be1560) {
      %117 = "llvm.call"(%116) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be15f0) {
      %118 = "llvm.bitcast"(%117) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3be1680) {
      %119 = "llvm.load"(%118) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3b17540) {
  "rmem.llvm.store"(%120, %112) : (i64, !rmem.rmref<1, !llvm.ptr<i64>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be1710)
    ** Insert  : 'llvm.call'(0x3be43d0)
    ** Insert  : 'llvm.call'(0x3be4460)
    ** Insert  : 'llvm.bitcast'(0x3be44f0)
    ** Insert  : 'llvm.store'(0x3be4570)
    ** Replace : 'rmem.llvm.store'(0x3b17540)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be1710) {
      %121 = "llvm.ptrtoint"(%111) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be43d0) {
      %122 = "llvm.call"(%121) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be4460) {
      %123 = "llvm.call"(%122) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be44f0) {
      %124 = "llvm.bitcast"(%123) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3be4570) {
      "llvm.store"(%119, %124) : (i64, !llvm.ptr<i64>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b18950) {
  %125 = "rmem.llvm.getelementptr"(%82) {structIndices = array<i32: 0, 7>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i64>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3be4620)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b18950)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3be4620) {
      %125 = "llvm.getelementptr"(%81) {rawConstantIndices = array<i32: 0, 7>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b19040) {
  %127 = "rmem.llvm.load"(%114) : (!rmem.rmref<1, !llvm.ptr<i64>>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be46b0)
    ** Insert  : 'llvm.call'(0x3be4740)
    ** Insert  : 'llvm.call'(0x3be47d0)
    ** Insert  : 'llvm.bitcast'(0x3be4860)
    ** Insert  : 'llvm.load'(0x3be48f0)
    ** Replace : 'rmem.llvm.load'(0x3b19040)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be46b0) {
      %127 = "llvm.ptrtoint"(%113) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be4740) {
      %128 = "llvm.call"(%127) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be47d0) {
      %129 = "llvm.call"(%128) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be4860) {
      %130 = "llvm.bitcast"(%129) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3be48f0) {
      %131 = "llvm.load"(%130) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3b17890) {
  "rmem.llvm.store"(%132, %126) : (i64, !rmem.rmref<1, !llvm.ptr<i64>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bddda0)
    ** Insert  : 'llvm.call'(0x3bdde30)
    ** Insert  : 'llvm.call'(0x3bddec0)
    ** Insert  : 'llvm.bitcast'(0x3bddf50)
    ** Insert  : 'llvm.store'(0x3bddfd0)
    ** Replace : 'rmem.llvm.store'(0x3b17890)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bddda0) {
      %133 = "llvm.ptrtoint"(%125) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bdde30) {
      %134 = "llvm.call"(%133) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bddec0) {
      %135 = "llvm.call"(%134) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bddf50) {
      %136 = "llvm.bitcast"(%135) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3bddfd0) {
      "llvm.store"(%131, %136) : (i64, !llvm.ptr<i64>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b192d0) {
  %137 = "rmem.llvm.getelementptr"(%82) {structIndices = array<i32: 0, 6>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i64>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bde080)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b192d0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bde080) {
      %137 = "llvm.getelementptr"(%81) {rawConstantIndices = array<i32: 0, 6>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b193a0) {
  %139 = "rmem.llvm.load"(%70) : (!rmem.rmref<1, !llvm.ptr<i64>>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bde110)
    ** Insert  : 'llvm.call'(0x3bde1a0)
    ** Insert  : 'llvm.call'(0x3bde230)
    ** Insert  : 'llvm.bitcast'(0x3bde2c0)
    ** Insert  : 'llvm.load'(0x3bde350)
    ** Replace : 'rmem.llvm.load'(0x3b193a0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bde110) {
      %139 = "llvm.ptrtoint"(%69) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bde1a0) {
      %140 = "llvm.call"(%139) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bde230) {
      %141 = "llvm.call"(%140) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bde2c0) {
      %142 = "llvm.bitcast"(%141) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bde350) {
      %143 = "llvm.load"(%142) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3b16c30) {
  "rmem.llvm.store"(%144, %138) : (i64, !rmem.rmref<1, !llvm.ptr<i64>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bde3e0)
    ** Insert  : 'llvm.call'(0x3bde470)
    ** Insert  : 'llvm.call'(0x3be9720)
    ** Insert  : 'llvm.bitcast'(0x3be97b0)
    ** Insert  : 'llvm.store'(0x3be9830)
    ** Replace : 'rmem.llvm.store'(0x3b16c30)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bde3e0) {
      %145 = "llvm.ptrtoint"(%137) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bde470) {
      %146 = "llvm.call"(%145) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be9720) {
      %147 = "llvm.call"(%146) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be97b0) {
      %148 = "llvm.bitcast"(%147) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3be9830) {
      "llvm.store"(%143, %148) : (i64, !llvm.ptr<i64>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3b1a530) {
  "rmem.llvm.store"(<<UNKNOWN SSA VALUE>>, %86) : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bec110)
    ** Insert  : 'llvm.call'(0x3be98e0)
    ** Insert  : 'llvm.call'(0x3be9970)
    ** Insert  : 'llvm.bitcast'(0x3be9a00)
    ** Insert  : 'llvm.store'(0x3be9a80)
    ** Replace : 'rmem.llvm.store'(0x3b1a530)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bec110) {
      %149 = "llvm.ptrtoint"(%85) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be98e0) {
      %150 = "llvm.call"(%149) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be9970) {
      %151 = "llvm.call"(%150) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be9a00) {
      %152 = "llvm.bitcast"(%151) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3be9a80) {
      "llvm.store"(%arg2, %152) : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3b1c6b0) {
  "rmem.llvm.store"(<<UNKNOWN SSA VALUE>>, %100) : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be9b30)
    ** Insert  : 'llvm.call'(0x3be9bc0)
    ** Insert  : 'llvm.call'(0x3be9c50)
    ** Insert  : 'llvm.bitcast'(0x3be9ce0)
    ** Insert  : 'llvm.store'(0x3be9d60)
    ** Replace : 'rmem.llvm.store'(0x3b1c6b0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be9b30) {
      %153 = "llvm.ptrtoint"(%99) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be9bc0) {
      %154 = "llvm.call"(%153) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be9c50) {
      %155 = "llvm.call"(%154) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be9ce0) {
      %156 = "llvm.bitcast"(%155) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3be9d60) {
      "llvm.store"(%arg3, %156) : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3aedad0) {
  "rmem.llvm.store"(<<UNKNOWN SSA VALUE>>, %114) : (i64, !rmem.rmref<1, !llvm.ptr<i64>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be9e10)
    ** Insert  : 'llvm.call'(0x3be9ea0)
    ** Insert  : 'llvm.call'(0x3be9f30)
    ** Insert  : 'llvm.bitcast'(0x3be9fc0)
    ** Insert  : 'llvm.store'(0x3bea040)
    ** Replace : 'rmem.llvm.store'(0x3aedad0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be9e10) {
      %157 = "llvm.ptrtoint"(%113) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be9ea0) {
      %158 = "llvm.call"(%157) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be9f30) {
      %159 = "llvm.call"(%158) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be9fc0) {
      %160 = "llvm.bitcast"(%159) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3bea040) {
      "llvm.store"(%arg4, %160) : (i64, !llvm.ptr<i64>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b1c8a0) {
  %161 = "rmem.llvm.getelementptr"(%68) {structIndices = array<i32: 0, 7>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i64>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bea0f0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b1c8a0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bea0f0) {
      %161 = "llvm.getelementptr"(%67) {rawConstantIndices = array<i32: 0, 7>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3b1c7f0) {
  "rmem.llvm.store"(<<UNKNOWN SSA VALUE>>, %162) : (i64, !rmem.rmref<1, !llvm.ptr<i64>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3beb190)
    ** Insert  : 'llvm.call'(0x3beb220)
    ** Insert  : 'llvm.call'(0x3beb2b0)
    ** Insert  : 'llvm.bitcast'(0x3beb340)
    ** Insert  : 'llvm.store'(0x3beb3c0)
    ** Replace : 'rmem.llvm.store'(0x3b1c7f0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3beb190) {
      %163 = "llvm.ptrtoint"(%161) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3beb220) {
      %164 = "llvm.call"(%163) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3beb2b0) {
      %165 = "llvm.call"(%164) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3beb340) {
      %166 = "llvm.bitcast"(%165) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3beb3c0) {
      "llvm.store"(%arg4, %166) : (i64, !llvm.ptr<i64>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3b1c750) {
  "rmem.llvm.store"(<<UNKNOWN SSA VALUE>>, %70) : (i64, !rmem.rmref<1, !llvm.ptr<i64>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3beb470)
    ** Insert  : 'llvm.call'(0x3beb500)
    ** Insert  : 'llvm.call'(0x3beb590)
    ** Insert  : 'llvm.bitcast'(0x3beb620)
    ** Insert  : 'llvm.store'(0x3beb6a0)
    ** Replace : 'rmem.llvm.store'(0x3b1c750)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3beb470) {
      %167 = "llvm.ptrtoint"(%69) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3beb500) {
      %168 = "llvm.call"(%167) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3beb590) {
      %169 = "llvm.call"(%168) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3beb620) {
      %170 = "llvm.bitcast"(%169) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3beb6a0) {
      "llvm.store"(%arg5, %170) : (i64, !llvm.ptr<i64>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.muli'(0x3b1c970) {
  %171 = "arith.muli"(%arg6, %1) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x3b1ca60) {
  %172 = "arith.addi"(%171, %5) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b1cb70) {
  %173 = "rmem.llvm.load"(%60) : (!llvm.ptr<i64>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3beb750)
    ** Replace : 'rmem.llvm.load'(0x3b1cb70)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3beb750) {
      %173 = "llvm.load"(%59) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x3b1cc60) {
  %175 = "arith.cmpi"(%172, %174) {predicate = 3 : i64} : (i64, i64) -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x3b1cfc0) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x3b1ced0) {
  %177 = "arith.addi"(%171, %0) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b1d270) {
  %178 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>, %177) {structIndices = array<i32>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bdfe80)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b1d270)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bdfe80) {
      %178 = "llvm.getelementptr"(%arg1, %177) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b1d380) {
  %180 = "rmem.llvm.getelementptr"(%179) {structIndices = array<i32: 0, 6>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i64>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bee7d0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b1d380)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bee7d0) {
      %180 = "llvm.getelementptr"(%178) {rawConstantIndices = array<i32: 0, 6>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b1d450) {
  %182 = "rmem.llvm.load"(%181) : (!rmem.rmref<1, !llvm.ptr<i64>>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be0540)
    ** Insert  : 'llvm.call'(0x3be05d0)
    ** Insert  : 'llvm.call'(0x3bdff30)
    ** Insert  : 'llvm.bitcast'(0x3bdffc0)
    ** Insert  : 'llvm.load'(0x3be0050)
    ** Replace : 'rmem.llvm.load'(0x3b1d450)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be0540) {
      %182 = "llvm.ptrtoint"(%180) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be05d0) {
      %183 = "llvm.call"(%182) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bdff30) {
      %184 = "llvm.call"(%183) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bdffc0) {
      %185 = "llvm.bitcast"(%184) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3be0050) {
      %186 = "llvm.load"(%185) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b1e5c0) {
  %188 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>, %171) {structIndices = array<i32>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3be0170)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b1e5c0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3be0170) {
      %188 = "llvm.getelementptr"(%arg1, %171) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b1e6d0) {
  %190 = "rmem.llvm.getelementptr"(%189) {structIndices = array<i32: 0, 6>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i64>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3be00e0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b1e6d0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3be00e0) {
      %190 = "llvm.getelementptr"(%188) {rawConstantIndices = array<i32: 0, 6>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b1e7a0) {
  %192 = "rmem.llvm.load"(%191) : (!rmem.rmref<1, !llvm.ptr<i64>>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be0220)
    ** Insert  : 'llvm.call'(0x3be02b0)
    ** Insert  : 'llvm.call'(0x3be0340)
    ** Insert  : 'llvm.bitcast'(0x3be03d0)
    ** Insert  : 'llvm.load'(0x3be0460)
    ** Replace : 'rmem.llvm.load'(0x3b1e7a0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be0220) {
      %192 = "llvm.ptrtoint"(%190) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be02b0) {
      %193 = "llvm.call"(%192) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be0340) {
      %194 = "llvm.call"(%193) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be03d0) {
      %195 = "llvm.bitcast"(%194) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3be0460) {
      %196 = "llvm.load"(%195) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x3b1e890) {
  %198 = "arith.cmpi"(%187, %197) {predicate = 2 : i64} : (i64, i64) -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.select'(0x3b1e9a0) {
  %199 = "arith.select"(%198, %172, %171) : (i1, i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3aaf140) {
  "scf.yield"(%199) : (i64) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3ae2570) {
  "scf.yield"(%171) : (i64) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3ae2250) {
  "scf.yield"(%176) : (i64) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3ac7e00) {
  "scf.yield"(%arg6) : (i64) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b1eb80) {
  "scf.yield"(%77, %79, %78) : (i1, i64, i64) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b16450) {
  "scf.yield"(%2, %arg6, %arg7) : (i1, i64, i64) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.condition'(0x3b1ec40) {
  "scf.condition"(%65#0, %65#1, %65#2) : (i1, i64, i64) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b1d170) {
  "scf.yield"(%arg6, %arg7) : (i64, i64) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.return'(0x3ab02a0) {
  "func.return"() : () -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.func'(0x3b16cd0) {
  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'func.func -> ()' {
    ** Insert  : 'func.func'(0x3b1e820)
    ** Erase   : 'func.func'(0x3b16cd0)

    //===-------------------------------------------===//
    Legalizing operation : 'func.func'(0x3b1e820) {
    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3acc280) {
  %0 = "arith.constant"() {value = -15 : i64} : () -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3b16e40) {
  %1 = "arith.constant"() {value = 1 : index} : () -> index

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3b16be0) {
  %2 = "arith.constant"() {value = true} : () -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3b16f80) {
  %3 = "arith.constant"() {value = 1 : i32} : () -> i32

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3b190d0) {
  %4 = "arith.constant"() {value = -1 : i32} : () -> i32

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3b17070) {
  %5 = "arith.constant"() {value = -1 : i64} : () -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3b173e0) {
  %6 = "arith.constant"() {value = false} : () -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3b1ea70) {
  %7 = "arith.constant"() {value = 2 : i64} : () -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3b1e940) {
  %8 = "arith.constant"() {value = 15000 : i64} : () -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3ae2750) {
  %9 = "arith.constant"() {value = 30 : i64} : () -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3ac76e0) {
  %10 = "arith.constant"() {value = 0 : i64} : () -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3ae2910) {
  %11 = "arith.constant"() {value = 1 : i64} : () -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.mlir.undef'(0x3ae2a20) {
  %12 = "llvm.mlir.undef"() : () -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b1cd10) {
  %13 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 18>} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bee1c0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b1cd10)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bee1c0) {
      %13 = "llvm.getelementptr"(%arg0) {rawConstantIndices = array<i32: 0, 18>} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b1fd20) {
  %15 = "rmem.llvm.load"(%14) : (!llvm.ptr<i64>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bee250)
    ** Replace : 'rmem.llvm.load'(0x3b1fd20)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bee250) {
      %15 = "llvm.load"(%13) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x3b1fdb0) {
  %17 = "arith.addi"(%16, %0) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b21010) {
  %18 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 3>} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bee2e0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b21010)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bee2e0) {
      %18 = "llvm.getelementptr"(%arg0) {rawConstantIndices = array<i32: 0, 3>} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b210a0) {
  %20 = "rmem.llvm.load"(%19) : (!llvm.ptr<i64>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bee370)
    ** Replace : 'rmem.llvm.load'(0x3b210a0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bee370) {
      %20 = "llvm.load"(%18) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x3af8d30) {
  %22 = "arith.cmpi"(%21, %8) {predicate = 3 : i64} : (i64, i64) -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x3af2db0) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3af2d00) {
  %25 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 5>} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bee400)
    ** Replace : 'rmem.llvm.getelementptr'(0x3af2d00)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bee400) {
      %25 = "llvm.getelementptr"(%arg0) {rawConstantIndices = array<i32: 0, 5>} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3af2e70) {
  %27 = "rmem.llvm.load"(%26) : (!llvm.ptr<i64>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bee490)
    ** Replace : 'rmem.llvm.load'(0x3af2e70)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bee490) {
      %27 = "llvm.load"(%25) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3af2f00) {
  %29 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 9>} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bee520)
    ** Replace : 'rmem.llvm.getelementptr'(0x3af2f00)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bee520) {
      %29 = "llvm.getelementptr"(%arg0) {rawConstantIndices = array<i32: 0, 9>} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3af2f90) {
  %31 = "rmem.llvm.load"(%30) : (!llvm.ptr<i64>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bee5b0)
    ** Replace : 'rmem.llvm.load'(0x3af2f90)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bee5b0) {
      %31 = "llvm.load"(%29) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x3af3020) {
  %33 = "arith.addi"(%28, %32) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3af30d0) {
  %34 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 4>} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bee640)
    ** Replace : 'rmem.llvm.getelementptr'(0x3af30d0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bee640) {
      %34 = "llvm.getelementptr"(%arg0) {rawConstantIndices = array<i32: 0, 4>} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3af3160) {
  %36 = "rmem.llvm.load"(%35) : (!llvm.ptr<i64>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bee6d0)
    ** Replace : 'rmem.llvm.load'(0x3af3160)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bee6d0) {
      %36 = "llvm.load"(%34) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x3af31f0) {
  %38 = "arith.cmpi"(%33, %37) {predicate = 4 : i64} : (i64, i64) -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x3b161b0) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3af3350) {
  %40 = "rmem.llvm.load"(%19) : (!llvm.ptr<i64>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3beb7e0)
    ** Replace : 'rmem.llvm.load'(0x3af3350)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3beb7e0) {
      %40 = "llvm.load"(%18) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.muli'(0x3af34e0) {
  %42 = "arith.muli"(%41, %41) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.divsi'(0x3af35b0) {
  %43 = "arith.divsi"(%42, %7) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3af3680) {
  %44 = "rmem.llvm.load"(%26) : (!llvm.ptr<i64>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3beb900)
    ** Replace : 'rmem.llvm.load'(0x3af3680)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3beb900) {
      %44 = "llvm.load"(%25) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x3af3730) {
  %46 = "arith.addi"(%43, %45) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3af3800) {
  %47 = "rmem.llvm.load"(%35) : (!llvm.ptr<i64>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3beb990)
    ** Replace : 'rmem.llvm.load'(0x3af3800)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3beb990) {
      %47 = "llvm.load"(%34) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x3af38b0) {
  %49 = "arith.cmpi"(%46, %48) {predicate = 4 : i64} : (i64, i64) -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x3af5130) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.call'(0x3af4f70) {
  %51 = "func.call"(<<UNKNOWN SSA VALUE>>) {callee = @resize_prob} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'func.call -> ()' {
    ** Insert  : 'func.call'(0x3bedfd0)
    ** Replace : 'func.call'(0x3af4f70)

    //===-------------------------------------------===//
    Legalizing operation : 'func.call'(0x3bedfd0) {
      %51 = "func.call"(%arg0) {callee = @resize_prob} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x3af5200) {
  %53 = "arith.cmpi"(%52, %10) {predicate = 1 : i64} : (i64, i64) -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x3af5310) {
  %54 = "arith.cmpi"(%52, %10) {predicate = 0 : i64} : (i64, i64) -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.select'(0x3af5420) {
  %55 = "arith.select"(%53, %5, %12) : (i1, i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x3af6b50) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3ae0ca0) {
  "scf.yield"() : () -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.call'(0x3ac6230) {
  "func.call"(<<UNKNOWN SSA VALUE>>) {callee = @refresh_neighbour_lists} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'func.call -> ()' {
    ** Insert  : 'func.call'(0x3be2f90)
    ** Replace : 'func.call'(0x3ac6230)

    //===-------------------------------------------===//
    Legalizing operation : 'func.call'(0x3be2f90) {
      "func.call"(%arg0) {callee = @refresh_neighbour_lists} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b1cbf0) {
  "scf.yield"() : () -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b16a10) {
  "scf.yield"(%54, %55) : (i1, i64) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b1d0d0) {
  "scf.yield"(%2, %12) : (i1, i64) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3ae4de0) {
  "scf.yield"(%50#0, %50#1, %49) : (i1, i64, i1) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3af33d0) {
  "scf.yield"(%2, %12, %6) : (i1, i64, i1) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3ae4ea0) {
  "scf.yield"(%39#0, %39#1, %39#2) : (i1, i64, i1) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3ae4f60) {
  "scf.yield"(%2, %12, %6) : (i1, i64, i1) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x3b0fb20) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3af6c10) {
  %25 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 24>} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bec030)
    ** Replace : 'rmem.llvm.getelementptr'(0x3af6c10)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bec030) {
      %25 = "llvm.getelementptr"(%arg0) {rawConstantIndices = array<i32: 0, 24>} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3ae6360) {
  %27 = "rmem.llvm.load"(%26) : (!llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bee060)
    ** Replace : 'rmem.llvm.load'(0x3ae6360)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bee060) {
      %27 = "llvm.load"(%25) : (!llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3ae63f0) {
  %29 = "rmem.llvm.load"(%19) : (!llvm.ptr<i64>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bee0f0)
    ** Replace : 'rmem.llvm.load'(0x3ae63f0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bee0f0) {
      %29 = "llvm.load"(%18) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ae6480) {
  %31 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 23>} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bef870)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ae6480)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bef870) {
      %31 = "llvm.getelementptr"(%arg0) {rawConstantIndices = array<i32: 0, 23>} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3ae6510) {
  %33 = "rmem.llvm.load"(%32) : (!llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bed9c0)
    ** Replace : 'rmem.llvm.load'(0x3ae6510)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bed9c0) {
      %33 = "llvm.load"(%31) : (!llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.while'(0x3a9e720) {
  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'scf.while -> ()' {
    ** Insert  : 'scf.while'(0x3a57f50)
    ** Replace : 'scf.while'(0x3a9e720)

    //===-------------------------------------------===//
    Legalizing operation : 'scf.while'(0x3a57f50) {
    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x3ae6680) {
  %46 = "arith.cmpi"(<<UNKNOWN SSA VALUE>>, %30) {predicate = 2 : i64} : (i64, i64) -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x3b0f1b0) {
  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'scf.if -> ()' {
    ** Insert  : 'scf.if'(0x3af8f00)
    ** Replace : 'scf.if'(0x3b0f1b0)

    //===-------------------------------------------===//
    Legalizing operation : 'scf.if'(0x3af8f00) {
    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3ae6730) {
  %49 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 1>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3beda50)
    ** Replace : 'rmem.llvm.getelementptr'(0x3ae6730)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3beda50) {
      %49 = "llvm.getelementptr"(%arg2) {rawConstantIndices = array<i32: 1>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b0dea0) {
  %51 = "rmem.llvm.getelementptr"(%50) {structIndices = array<i32: 0, 3>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i32>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bebf10)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b0dea0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bebf10) {
      %51 = "llvm.getelementptr"(%49) {rawConstantIndices = array<i32: 0, 3>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i32>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b0df30) {
  %53 = "rmem.llvm.load"(%52) : (!rmem.rmref<1, !llvm.ptr<i32>>) -> i32

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bebfa0)
    ** Insert  : 'llvm.call'(0x3bedc20)
    ** Insert  : 'llvm.call'(0x3bedcb0)
    ** Insert  : 'llvm.bitcast'(0x3bedd40)
    ** Insert  : 'llvm.load'(0x3beddd0)
    ** Replace : 'rmem.llvm.load'(0x3b0df30)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bebfa0) {
      %53 = "llvm.ptrtoint"(%51) : (!llvm.ptr<i32>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bedc20) {
      %54 = "llvm.call"(%53) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bedcb0) {
      %55 = "llvm.call"(%54) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bedd40) {
      %56 = "llvm.bitcast"(%55) : (!llvm.ptr<i8>) -> !llvm.ptr<i32>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3beddd0) {
      %57 = "llvm.load"(%56) : (!llvm.ptr<i32>) -> i32

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x3b0dfc0) {
  %59 = "arith.cmpi"(%58, %4) {predicate = 0 : i64} : (i32, i32) -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x3b0f4b0) {
  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'scf.if -> ()' {
    ** Insert  : 'scf.if'(0x3b08500)
    ** Replace : 'scf.if'(0x3b0f4b0)

    //===-------------------------------------------===//
    Legalizing operation : 'scf.if'(0x3b08500) {
    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x3b0f0e0) {
  %62 = "arith.addi"(<<UNKNOWN SSA VALUE>>, %11) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b0f2e0) {
  %63 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 3>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bede60)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b0f2e0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bede60) {
      %63 = "llvm.getelementptr"(%arg2) {rawConstantIndices = array<i32: 3>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3ae62b0) {
  "scf.yield"(%62, %64) : (i64, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'scf.yield -> ()' {
    ** Insert  : 'scf.yield'(0x3be2dc0)
    ** Replace : 'scf.yield'(0x3ae62b0)

    //===-------------------------------------------===//
    Legalizing operation : 'scf.yield'(0x3be2dc0) {
      "scf.yield"(%62, %63) : (i64, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b0f3a0) {
  "scf.yield"(<<UNKNOWN SSA VALUE>>, <<UNKNOWN SSA VALUE>>) : (i64, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'scf.yield -> ()' {
    ** Insert  : 'scf.yield'(0x3bee850)
    ** Replace : 'scf.yield'(0x3b0f3a0)

    //===-------------------------------------------===//
    Legalizing operation : 'scf.yield'(0x3bee850) {
      "scf.yield"(%arg1, %arg2) : (i64, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b0f600) {
  "scf.yield"(%59, %61#0, %61#1) : (i1, i64, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'scf.yield -> ()' {
    ** Insert  : 'scf.yield'(0x3bee8f0)
    ** Replace : 'scf.yield'(0x3b0f600)

    //===-------------------------------------------===//
    Legalizing operation : 'scf.yield'(0x3bee8f0) {
      "scf.yield"(%59, %60#0, %60#1) : (i1, i64, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b0f6c0) {
  "scf.yield"(%6, <<UNKNOWN SSA VALUE>>, <<UNKNOWN SSA VALUE>>) : (i1, i64, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'scf.yield -> ()' {
    ** Insert  : 'scf.yield'(0x3bee9b0)
    ** Replace : 'scf.yield'(0x3b0f6c0)

    //===-------------------------------------------===//
    Legalizing operation : 'scf.yield'(0x3bee9b0) {
      "scf.yield"(%6, %arg1, %arg2) : (i1, i64, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.condition'(0x3b0f780) {
  "scf.condition"(%48#0, %48#1, %48#2) : (i1, i64, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'scf.condition -> ()' {
    ** Insert  : 'scf.condition'(0x3beea70)
    ** Replace : 'scf.condition'(0x3b0f780)

    //===-------------------------------------------===//
    Legalizing operation : 'scf.condition'(0x3beea70) {
      "scf.condition"(%47#0, %47#1, %47#2) : (i1, i64, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b0f560) {
  "scf.yield"(<<UNKNOWN SSA VALUE>>, <<UNKNOWN SSA VALUE>>) : (i64, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'scf.yield -> ()' {
    ** Insert  : 'scf.yield'(0x3beeb30)
    ** Replace : 'scf.yield'(0x3b0f560)

    //===-------------------------------------------===//
    Legalizing operation : 'scf.yield'(0x3beeb30) {
      "scf.yield"(%arg1, %arg2) : (i64, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'llvm.mlir.null'(0x3b19430) {
  %37 = "llvm.mlir.null"() : () -> !llvm.ptr<i8>

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.bitcast'(0x3b0f850) {
  %38 = "rmem.bitcast"(%37) : (!llvm.ptr<i8>) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.bitcast -> ()' {
    ** Insert  : 'llvm.bitcast'(0x3bedef0)
    ** Replace : 'rmem.bitcast'(0x3b0f850)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bedef0) {
      %38 = "llvm.bitcast"(%37) : (!llvm.ptr<i8>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.index_cast'(0x3b0f8e0) {
  %40 = "arith.index_cast"(%30) : (i64) -> index

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.index_cast'(0x3b0f970) {
  %41 = "arith.index_cast"(%36#0) : (i64) -> index

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.nullref'(0x3acfc20) {
  %42 = "rmem.nullref"() : () -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.nullref -> ()' {
    ** Insert  : 'llvm.mlir.null'(0x3ac77d0)
    ** Replace : 'rmem.nullref'(0x3acfc20)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.mlir.null'(0x3ac77d0) {
      %42 = "llvm.mlir.null"() : () -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b0fa00) {
  %44 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 8>} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bef660)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b0fa00)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bef660) {
      %44 = "llvm.getelementptr"(%arg0) {rawConstantIndices = array<i32: 0, 8>} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b0fa90) {
  %46 = "rmem.llvm.getelementptr"(%28) {structIndices = array<i32: 0, 6>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i64>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bef7c0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b0fa90)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bef7c0) {
      %46 = "llvm.getelementptr"(%27) {rawConstantIndices = array<i32: 0, 6>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.for'(0x3b57540) {
  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'scf.for -> ()' {
    ** Insert  : 'scf.for'(0x3b03bb0)
    ** Replace : 'scf.for'(0x3b57540)

    //===-------------------------------------------===//
    Legalizing operation : 'scf.for'(0x3b03bb0) {
    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b101d0) {
  %54 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 1>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bef120)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b101d0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bef120) {
      %54 = "llvm.getelementptr"(%arg5) {rawConstantIndices = array<i32: 1>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b10260) {
  %56 = "rmem.llvm.getelementptr"(%55) {structIndices = array<i32: 0, 3>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i32>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bef370)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b10260)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bef370) {
      %56 = "llvm.getelementptr"(%54) {rawConstantIndices = array<i32: 0, 3>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i32>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b10330) {
  %58 = "rmem.llvm.load"(%57) : (!rmem.rmref<1, !llvm.ptr<i32>>) -> i32

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bec430)
    ** Insert  : 'llvm.call'(0x3bec4c0)
    ** Insert  : 'llvm.call'(0x3bec550)
    ** Insert  : 'llvm.bitcast'(0x3bec5e0)
    ** Insert  : 'llvm.load'(0x3bec670)
    ** Replace : 'rmem.llvm.load'(0x3b10330)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bec430) {
      %58 = "llvm.ptrtoint"(%56) : (!llvm.ptr<i32>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bec4c0) {
      %59 = "llvm.call"(%58) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bec550) {
      %60 = "llvm.call"(%59) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bec5e0) {
      %61 = "llvm.bitcast"(%60) : (!llvm.ptr<i8>) -> !llvm.ptr<i32>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bec670) {
      %62 = "llvm.load"(%61) : (!llvm.ptr<i32>) -> i32

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x3b10400) {
  %64 = "arith.cmpi"(%63, %5) {predicate = 1 : i64} : (i32, i32) -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.select'(0x3b104f0) {
  %65 = "arith.select"(%64, %55, <<UNKNOWN SSA VALUE>>) : (i1, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'arith.select -> ()' {
    ** Insert  : 'arith.select'(0x3bef6f0)
    ** Replace : 'arith.select'(0x3b104f0)

    //===-------------------------------------------===//
    Legalizing operation : 'arith.select'(0x3bef6f0) {
      %65 = "arith.select"(%64, %54, %arg4) : (i1, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x3b10790) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b106d0) {
  %72 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 2>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bec700)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b106d0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bec700) {
      %72 = "llvm.getelementptr"(%arg5) {rawConstantIndices = array<i32: 0, 2>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b10940) {
  %74 = "rmem.llvm.load"(%73) : (!rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>) -> !llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bef4d0)
    ** Insert  : 'llvm.call'(0x3bef560)
    ** Insert  : 'llvm.call'(0x3bec790)
    ** Insert  : 'llvm.bitcast'(0x3bec820)
    ** Insert  : 'llvm.load'(0x3bec8b0)
    ** Replace : 'rmem.llvm.load'(0x3b10940)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bef4d0) {
      %74 = "llvm.ptrtoint"(%72) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bef560) {
      %75 = "llvm.call"(%74) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bec790) {
      %76 = "llvm.call"(%75) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bec820) {
      %77 = "llvm.bitcast"(%76) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bec8b0) {
      %78 = "llvm.load"(%77) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b10a30) {
  %80 = "rmem.llvm.getelementptr"(%79) {structIndices = array<i32: 0, 7>} : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>) -> !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bec940)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b10a30)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bec940) {
      %80 = "llvm.getelementptr"(%78) {rawConstantIndices = array<i32: 0, 7>} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b10b20) {
  %82 = "rmem.llvm.load"(%81) : (!llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bf1f30)
    ** Replace : 'rmem.llvm.load'(0x3b10b20)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bf1f30) {
      %82 = "llvm.load"(%80) : (!llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b10c10) {
  %84 = "rmem.llvm.getelementptr"(%83) {structIndices = array<i32: 0, 2>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bed910)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b10c10)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bed910) {
      %84 = "llvm.getelementptr"(%82) {rawConstantIndices = array<i32: 0, 2>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b10d00) {
  %86 = "rmem.llvm.load"(%85) : (!rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>) -> !llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bf1920)
    ** Insert  : 'llvm.call'(0x3bf19b0)
    ** Insert  : 'llvm.call'(0x3bf1a40)
    ** Insert  : 'llvm.bitcast'(0x3bf1ad0)
    ** Insert  : 'llvm.load'(0x3bf1b60)
    ** Replace : 'rmem.llvm.load'(0x3b10d00)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bf1920) {
      %86 = "llvm.ptrtoint"(%84) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bf19b0) {
      %87 = "llvm.call"(%86) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bf1a40) {
      %88 = "llvm.call"(%87) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bf1ad0) {
      %89 = "llvm.bitcast"(%88) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bf1b60) {
      %90 = "llvm.load"(%89) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b56200) {
  %92 = "rmem.llvm.getelementptr"(%91) {structIndices = array<i32: 0, 9>} : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>) -> !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bf1bf0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b56200)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bf1bf0) {
      %92 = "llvm.getelementptr"(%90) {rawConstantIndices = array<i32: 0, 9>} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3ae67b0) {
  "rmem.llvm.store"(<<UNKNOWN SSA VALUE>>, %93) : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.store'(0x3be2d20)
    ** Replace : 'rmem.llvm.store'(0x3ae67b0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3be2d20) {
      "llvm.store"(%arg4, %92) : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3af52a0) {
  "scf.yield"() : () -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b57340) {
  %67 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 3>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i32>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bf1c80)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b57340)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bf1c80) {
      %67 = "llvm.getelementptr"(%arg5) {rawConstantIndices = array<i32: 0, 3>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i32>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b573d0) {
  %69 = "rmem.llvm.load"(%68) : (!rmem.rmref<1, !llvm.ptr<i32>>) -> i32

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bf1d10)
    ** Insert  : 'llvm.call'(0x3bf1da0)
    ** Insert  : 'llvm.call'(0x3bf1e30)
    ** Insert  : 'llvm.bitcast'(0x3beca90)
    ** Insert  : 'llvm.load'(0x3becb20)
    ** Replace : 'rmem.llvm.load'(0x3b573d0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bf1d10) {
      %69 = "llvm.ptrtoint"(%67) : (!llvm.ptr<i32>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bf1da0) {
      %70 = "llvm.call"(%69) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bf1e30) {
      %71 = "llvm.call"(%70) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3beca90) {
      %72 = "llvm.bitcast"(%71) : (!llvm.ptr<i8>) -> !llvm.ptr<i32>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3becb20) {
      %73 = "llvm.load"(%72) : (!llvm.ptr<i32>) -> i32

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x3b57460) {
  %75 = "arith.cmpi"(%74, %5) {predicate = 0 : i64} : (i32, i32) -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x3b5a110) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b57290) {
  "scf.yield"(<<UNKNOWN SSA VALUE>>, <<UNKNOWN SSA VALUE>>) : (i64, i64) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b57700) {
  %78 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 2>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bf25d0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b57700)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bf25d0) {
      %78 = "llvm.getelementptr"(%arg5) {rawConstantIndices = array<i32: 0, 2>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b578c0) {
  %80 = "rmem.llvm.load"(%79) : (!rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>) -> !llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bf3670)
    ** Insert  : 'llvm.call'(0x3bf1fc0)
    ** Insert  : 'llvm.call'(0x3bf2050)
    ** Insert  : 'llvm.bitcast'(0x3bf20e0)
    ** Insert  : 'llvm.load'(0x3bf2170)
    ** Replace : 'rmem.llvm.load'(0x3b578c0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bf3670) {
      %80 = "llvm.ptrtoint"(%78) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bf1fc0) {
      %81 = "llvm.call"(%80) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bf2050) {
      %82 = "llvm.call"(%81) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bf20e0) {
      %83 = "llvm.bitcast"(%82) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bf2170) {
      %84 = "llvm.load"(%83) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b57950) {
  %86 = "rmem.llvm.getelementptr"(%85) {structIndices = array<i32: 0, 13>} : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>) -> !llvm.ptr<i32>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bf2200)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b57950)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bf2200) {
      %86 = "llvm.getelementptr"(%84) {rawConstantIndices = array<i32: 0, 13>} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> !llvm.ptr<i32>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b579e0) {
  %88 = "rmem.llvm.load"(%87) : (!llvm.ptr<i32>) -> i32

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bf2290)
    ** Replace : 'rmem.llvm.load'(0x3b579e0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bf2290) {
      %88 = "llvm.load"(%86) : (!llvm.ptr<i32>) -> i32

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.extsi'(0x3b57a70) {
  %90 = "arith.extsi"(%89) : (i32) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b58b10) {
  %91 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 7>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i64>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bf2320)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b58b10)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bf2320) {
      %91 = "llvm.getelementptr"(%arg5) {rawConstantIndices = array<i32: 0, 7>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b58ba0) {
  %93 = "rmem.llvm.load"(%92) : (!rmem.rmref<1, !llvm.ptr<i64>>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bf23b0)
    ** Insert  : 'llvm.call'(0x3bf2440)
    ** Insert  : 'llvm.call'(0x3bf24d0)
    ** Insert  : 'llvm.bitcast'(0x3becbb0)
    ** Insert  : 'llvm.load'(0x3becc40)
    ** Replace : 'rmem.llvm.load'(0x3b58ba0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bf23b0) {
      %93 = "llvm.ptrtoint"(%91) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bf2440) {
      %94 = "llvm.call"(%93) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bf24d0) {
      %95 = "llvm.call"(%94) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3becbb0) {
      %96 = "llvm.bitcast"(%95) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3becc40) {
      %97 = "llvm.load"(%96) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.subi'(0x3b58c30) {
  %99 = "arith.subi"(%90, %98) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x3b58ce0) {
  %100 = "arith.addi"(%99, %18) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b59da0) {
  %101 = "rmem.llvm.getelementptr"(%66) {structIndices = array<i32: 0, 1>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bf3700)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b59da0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bf3700) {
      %101 = "llvm.getelementptr"(%65) {rawConstantIndices = array<i32: 0, 1>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b59e50) {
  %103 = "rmem.llvm.load"(%102) : (!rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>) -> !llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bf3790)
    ** Insert  : 'llvm.call'(0x3beccd0)
    ** Insert  : 'llvm.call'(0x3becd60)
    ** Insert  : 'llvm.bitcast'(0x3becdf0)
    ** Insert  : 'llvm.load'(0x3bece80)
    ** Replace : 'rmem.llvm.load'(0x3b59e50)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bf3790) {
      %103 = "llvm.ptrtoint"(%101) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3beccd0) {
      %104 = "llvm.call"(%103) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3becd60) {
      %105 = "llvm.call"(%104) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3becdf0) {
      %106 = "llvm.bitcast"(%105) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bece80) {
      %107 = "llvm.load"(%106) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b59f40) {
  %109 = "rmem.llvm.getelementptr"(%108) {structIndices = array<i32: 0, 9>} : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>) -> !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bf3820)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b59f40)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bf3820) {
      %109 = "llvm.getelementptr"(%107) {rawConstantIndices = array<i32: 0, 9>} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b5a030) {
  %111 = "rmem.llvm.load"(%110) : (!llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bf38b0)
    ** Replace : 'rmem.llvm.load'(0x3b5a030)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bf38b0) {
      %111 = "llvm.load"(%109) : (!llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.while'(0x3b5b650) {
  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'scf.while -> ()' {
    ** Insert  : 'scf.while'(0x3becf30)
    ** Replace : 'scf.while'(0x3b5b650)

    //===-------------------------------------------===//
    Legalizing operation : 'scf.while'(0x3becf30) {
    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.addrcmp'(0x3b5b500) {
  %115 = "rmem.addrcmp"(<<UNKNOWN SSA VALUE>>, %46) {predicate = 1 : i64} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> i1

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.addrcmp -> ()' {
    ** Insert  : 'llvm.icmp'(0x3bed120)
    ** Replace : 'rmem.addrcmp'(0x3b5b500)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.icmp'(0x3bed120) {
      %115 = "llvm.icmp"(%arg8, %45) {predicate = 1 : i64} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> i1

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.condition'(0x3ae6590) {
  "scf.condition"(%116, <<UNKNOWN SSA VALUE>>, <<UNKNOWN SSA VALUE>>, <<UNKNOWN SSA VALUE>>) : (i1, i64, i64, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'scf.condition -> ()' {
    ** Insert  : 'scf.condition'(0x3aa2000)
    ** Replace : 'scf.condition'(0x3ae6590)

    //===-------------------------------------------===//
    Legalizing operation : 'scf.condition'(0x3aa2000) {
      "scf.condition"(%115, %arg6, %arg7, %arg8) : (i1, i64, i64, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b5c080) {
  %115 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 1>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bf3940)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b5c080)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bf3940) {
      %115 = "llvm.getelementptr"(%arg8) {rawConstantIndices = array<i32: 0, 1>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b5c110) {
  %117 = "rmem.llvm.load"(%116) : (!rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>) -> !llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be7670)
    ** Insert  : 'llvm.call'(0x3be7700)
    ** Insert  : 'llvm.call'(0x3be7790)
    ** Insert  : 'llvm.bitcast'(0x3bed1d0)
    ** Insert  : 'llvm.load'(0x3bed260)
    ** Replace : 'rmem.llvm.load'(0x3b5c110)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be7670) {
      %117 = "llvm.ptrtoint"(%115) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be7700) {
      %118 = "llvm.call"(%117) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be7790) {
      %119 = "llvm.call"(%118) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bed1d0) {
      %120 = "llvm.bitcast"(%119) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bed260) {
      %121 = "llvm.load"(%120) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b5c1e0) {
  %123 = "rmem.llvm.getelementptr"(%122) {structIndices = array<i32: 0, 13>} : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>) -> !llvm.ptr<i32>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bed2f0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b5c1e0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bed2f0) {
      %123 = "llvm.getelementptr"(%121) {rawConstantIndices = array<i32: 0, 13>} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> !llvm.ptr<i32>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b5c2b0) {
  %125 = "rmem.llvm.load"(%124) : (!llvm.ptr<i32>) -> i32

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bed380)
    ** Replace : 'rmem.llvm.load'(0x3b5c2b0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bed380) {
      %125 = "llvm.load"(%123) : (!llvm.ptr<i32>) -> i32

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.extsi'(0x3b5c3a0) {
  %127 = "arith.extsi"(%126) : (i32) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b5c4b0) {
  %128 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 7>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i64>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bed410)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b5c4b0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bed410) {
      %128 = "llvm.getelementptr"(%arg8) {rawConstantIndices = array<i32: 0, 7>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b5c580) {
  %130 = "rmem.llvm.load"(%129) : (!rmem.rmref<1, !llvm.ptr<i64>>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bed4a0)
    ** Insert  : 'llvm.call'(0x3bed530)
    ** Insert  : 'llvm.call'(0x3bed5c0)
    ** Insert  : 'llvm.bitcast'(0x3bed650)
    ** Insert  : 'llvm.load'(0x3bed6e0)
    ** Replace : 'rmem.llvm.load'(0x3b5c580)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bed4a0) {
      %130 = "llvm.ptrtoint"(%128) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bed530) {
      %131 = "llvm.call"(%130) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bed5c0) {
      %132 = "llvm.call"(%131) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bed650) {
      %133 = "llvm.bitcast"(%132) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bed6e0) {
      %134 = "llvm.load"(%133) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x3b5c670) {
  %136 = "arith.addi"(%127, %135) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x3b5c780) {
  %137 = "arith.cmpi"(%136, %100) {predicate = 4 : i64} : (i64, i64) -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x3b5a2c0) {
  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'scf.if -> ()' {
    ** Insert  : 'scf.if'(0x3a68c60)
    ** Replace : 'scf.if'(0x3b5a2c0)

    //===-------------------------------------------===//
    Legalizing operation : 'scf.if'(0x3a68c60) {
    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b5c9b0) {
  %140 = "rmem.llvm.getelementptr"(%122) {structIndices = array<i32: 0, 9>} : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>) -> !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bed770)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b5c9b0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bed770) {
      %140 = "llvm.getelementptr"(%121) {rawConstantIndices = array<i32: 0, 9>} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b5cb80) {
  %142 = "rmem.llvm.load"(%141) : (!llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bed850)
    ** Replace : 'rmem.llvm.load'(0x3b5cb80)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bed850) {
      %142 = "llvm.load"(%140) : (!llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b5cc80) {
  "scf.yield"(<<UNKNOWN SSA VALUE>>, <<UNKNOWN SSA VALUE>>, %143) : (i64, i64, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'scf.yield -> ()' {
    ** Insert  : 'scf.yield'(0x3bf3500)
    ** Replace : 'scf.yield'(0x3b5cc80)

    //===-------------------------------------------===//
    Legalizing operation : 'scf.yield'(0x3bf3500) {
      "scf.yield"(%arg6, %arg7, %142) : (i64, i64, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b5cad0) {
  %140 = "rmem.llvm.getelementptr"(%122) {structIndices = array<i32: 0, 0>} : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>) -> !llvm.ptr<i64>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bf3480)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b5cad0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bf3480) {
      %140 = "llvm.getelementptr"(%121) {rawConstantIndices = array<i32: 0, 0>} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b5ce30) {
  %142 = "rmem.llvm.load"(%141) : (!llvm.ptr<i64>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3be7240)
    ** Replace : 'rmem.llvm.load'(0x3b5ce30)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3be7240) {
      %142 = "llvm.load"(%140) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.subi'(0x3b5cec0) {
  %144 = "arith.subi"(%10, %143) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b5cfb0) {
  %145 = "rmem.llvm.getelementptr"(%85) {structIndices = array<i32: 0, 0>} : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>) -> !llvm.ptr<i64>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3be72d0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b5cfb0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3be72d0) {
      %145 = "llvm.getelementptr"(%84) {rawConstantIndices = array<i32: 0, 0>} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b5d080) {
  %147 = "rmem.llvm.load"(%146) : (!llvm.ptr<i64>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3be7360)
    ** Replace : 'rmem.llvm.load'(0x3b5d080)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3be7360) {
      %147 = "llvm.load"(%145) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x3b5d170) {
  %149 = "arith.addi"(%144, %148) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x3b5d280) {
  %150 = "arith.cmpi"(%149, %11) {predicate = 2 : i64} : (i64, i64) -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x3b607b0) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b5d3f0) {
  %154 = "rmem.llvm.load"(%48) : (!llvm.ptr<i64>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3be73f0)
    ** Replace : 'rmem.llvm.load'(0x3b5d3f0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3be73f0) {
      %154 = "llvm.load"(%47) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x3b5d5c0) {
  %156 = "arith.cmpi"(<<UNKNOWN SSA VALUE>>, %155) {predicate = 2 : i64} : (i64, i64) -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x3b5f150) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.call'(0x3b5eea0) {
  "func.call"(%29, <<UNKNOWN SSA VALUE>>, %122, %85, %10, %149) {callee = @insert_new_arc} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, !llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, i64, i64) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'func.call -> ()' {
    ** Insert  : 'func.call'(0x3be7500)
    ** Replace : 'func.call'(0x3b5eea0)

    //===-------------------------------------------===//
    Legalizing operation : 'func.call'(0x3be7500) {
      "func.call"(%28, %arg7, %121, %84, %10, %149) {callee = @insert_new_arc} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, i64, i64) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x3b5efd0) {
  %158 = "arith.addi"(<<UNKNOWN SSA VALUE>>, %12) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3ad8ce0) {
  "scf.yield"(%158) : (i64) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b5f0c0) {
  %158 = "rmem.llvm.load"(%50) : (!rmem.rmref<1, !llvm.ptr<i64>>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be7480)
    ** Insert  : 'llvm.call'(0x3beba20)
    ** Insert  : 'llvm.call'(0x3bebab0)
    ** Insert  : 'llvm.bitcast'(0x3bebb40)
    ** Insert  : 'llvm.load'(0x3bebbd0)
    ** Replace : 'rmem.llvm.load'(0x3b5f0c0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be7480) {
      %158 = "llvm.ptrtoint"(%49) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3beba20) {
      %159 = "llvm.call"(%158) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bebab0) {
      %160 = "llvm.call"(%159) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bebb40) {
      %161 = "llvm.bitcast"(%160) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bebbd0) {
      %162 = "llvm.load"(%161) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x3b5f230) {
  %164 = "arith.cmpi"(%163, %149) {predicate = 4 : i64} : (i64, i64) -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x3b605f0) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.call'(0x3b5f400) {
  "func.call"(<<UNKNOWN SSA VALUE>>, %29, %122, %85, %10, %149) {callee = @replace_weaker_arc} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, i64, i64) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'func.call -> ()' {
    ** Insert  : 'func.call'(0x3bebce0)
    ** Replace : 'func.call'(0x3b5f400)

    //===-------------------------------------------===//
    Legalizing operation : 'func.call'(0x3bebce0) {
      "func.call"(%arg0, %28, %121, %84, %10, %149) {callee = @replace_weaker_arc} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, i64, i64) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b168e0) {
  "scf.yield"() : () -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b606a0) {
  "scf.yield"(<<UNKNOWN SSA VALUE>>) : (i64) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b60720) {
  "scf.yield"(%157) : (i64) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b5d4b0) {
  "scf.yield"(<<UNKNOWN SSA VALUE>>) : (i64) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b61880) {
  %152 = "rmem.llvm.getelementptr"(%122) {structIndices = array<i32: 0, 9>} : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>) -> !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bebc60)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b61880)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bebc60) {
      %152 = "llvm.getelementptr"(%121) {rawConstantIndices = array<i32: 0, 9>} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b62920) {
  %154 = "rmem.llvm.load"(%153) : (!llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bebe10)
    ** Replace : 'rmem.llvm.load'(0x3b62920)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bebe10) {
      %154 = "llvm.load"(%152) : (!llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b629a0) {
  "scf.yield"(%149, %151, %155) : (i64, i64, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'scf.yield -> ()' {
    ** Insert  : 'scf.yield'(0x3bf2650)
    ** Replace : 'scf.yield'(0x3b629a0)

    //===-------------------------------------------===//
    Legalizing operation : 'scf.yield'(0x3bf2650) {
      "scf.yield"(%149, %151, %154) : (i64, i64, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b5cd40) {
  "scf.yield"(%139#0, %139#1, %139#2) : (i64, i64, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'scf.yield -> ()' {
    ** Insert  : 'scf.yield'(0x3bf2710)
    ** Replace : 'scf.yield'(0x3b5cd40)

    //===-------------------------------------------===//
    Legalizing operation : 'scf.yield'(0x3bf2710) {
      "scf.yield"(%138#0, %138#1, %138#2) : (i64, i64, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b0ff00) {
  "scf.yield"(%114#0, %114#1) : (i64, i64) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b5b750) {
  %77 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 3>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bf2c70)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b5b750)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bf2c70) {
      %77 = "llvm.getelementptr"(%arg5) {rawConstantIndices = array<i32: 3>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b5be60) {
  "scf.yield"(%76#0, %76#1, %66, %78) : (i64, i64, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'scf.yield -> ()' {
    ** Insert  : 'scf.yield'(0x3a47d20)
    ** Replace : 'scf.yield'(0x3b5be60)

    //===-------------------------------------------===//
    Legalizing operation : 'scf.yield'(0x3a47d20) {
      "scf.yield"(%76#0, %76#1, %65, %77) : (i64, i64, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x3b5b7e0) {
  %53 = "arith.cmpi"(%52#1, %11) {predicate = 1 : i64} : (i64, i64) -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x3b57780) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b10140) {
  %54 = "rmem.llvm.load"(%27) : (!llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bf3310)
    ** Replace : 'rmem.llvm.load'(0x3b10140)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bf3310) {
      %54 = "llvm.load"(%26) : (!llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b5d330) {
  %56 = "rmem.llvm.getelementptr"(%55, %52#1) {structIndices = array<i32>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bf27e0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b5d330)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bf27e0) {
      %56 = "llvm.getelementptr"(%54, %51#1) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3b5a1c0) {
  "rmem.llvm.store"(%57, %27) : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.store'(0x3bf35c0)
    ** Replace : 'rmem.llvm.store'(0x3b5a1c0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3bf35c0) {
      "llvm.store"(%56, %26) : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b105c0) {
  %58 = "rmem.llvm.load"(%27) : (!llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bf33a0)
    ** Replace : 'rmem.llvm.load'(0x3b105c0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bf33a0) {
      %58 = "llvm.load"(%26) : (!llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x3b6ccb0) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.while'(0x3b5ba20) {
  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'scf.while -> ()' {
    ** Insert  : 'scf.while'(0x3bf2920)
    ** Replace : 'scf.while'(0x3b5ba20)

    //===-------------------------------------------===//
    Legalizing operation : 'scf.while'(0x3bf2920) {
    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.addrcmp'(0x3b5b970) {
  %71 = "rmem.addrcmp"(<<UNKNOWN SSA VALUE>>, %59) {predicate = 1 : i64} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> i1

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.addrcmp -> ()' {
    ** Insert  : 'llvm.icmp'(0x3bf2a70)
    ** Replace : 'rmem.addrcmp'(0x3b5b970)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.icmp'(0x3bf2a70) {
      %71 = "llvm.icmp"(%arg1, %58) {predicate = 1 : i64} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> i1

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.condition'(0x3ae50c0) {
  "scf.condition"(%72, <<UNKNOWN SSA VALUE>>) : (i1, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'scf.condition -> ()' {
    ** Insert  : 'scf.condition'(0x3be2e60)
    ** Replace : 'scf.condition'(0x3ae50c0)

    //===-------------------------------------------===//
    Legalizing operation : 'scf.condition'(0x3be2e60) {
      "scf.condition"(%71, %arg1) : (i1, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b5bb00) {
  %71 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 6>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i64>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bf2890)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b5bb00)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bf2890) {
      %71 = "llvm.getelementptr"(%arg1) {rawConstantIndices = array<i32: 0, 6>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3b5b880) {
  "rmem.llvm.store"(%11, %72) : (i64, !rmem.rmref<1, !llvm.ptr<i64>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bf2b20)
    ** Insert  : 'llvm.call'(0x3bf2bb0)
    ** Insert  : 'llvm.call'(0x3bf2d00)
    ** Insert  : 'llvm.bitcast'(0x3bf2d90)
    ** Insert  : 'llvm.store'(0x3bf2e10)
    ** Replace : 'rmem.llvm.store'(0x3b5b880)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bf2b20) {
      %73 = "llvm.ptrtoint"(%71) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bf2bb0) {
      %74 = "llvm.call"(%73) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bf2d00) {
      %75 = "llvm.call"(%74) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bf2d90) {
      %76 = "llvm.bitcast"(%75) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3bf2e10) {
      "llvm.store"(%11, %76) : (i64, !llvm.ptr<i64>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b67500) {
  %77 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 3>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i32>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bf2ec0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b67500)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bf2ec0) {
      %77 = "llvm.getelementptr"(%arg1) {rawConstantIndices = array<i32: 0, 3>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i32>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3b67450) {
  "rmem.llvm.store"(%4, %78) : (i32, !rmem.rmref<1, !llvm.ptr<i32>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bf2f50)
    ** Insert  : 'llvm.call'(0x3bf2fe0)
    ** Insert  : 'llvm.call'(0x3bf3070)
    ** Insert  : 'llvm.bitcast'(0x3bf3100)
    ** Insert  : 'llvm.store'(0x3bf3180)
    ** Replace : 'rmem.llvm.store'(0x3b67450)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bf2f50) {
      %79 = "llvm.ptrtoint"(%77) : (!llvm.ptr<i32>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bf2fe0) {
      %80 = "llvm.call"(%79) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bf3070) {
      %81 = "llvm.call"(%80) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bf3100) {
      %82 = "llvm.bitcast"(%81) : (!llvm.ptr<i8>) -> !llvm.ptr<i32>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3bf3180) {
      "llvm.store"(%4, %82) : (i32, !llvm.ptr<i32>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b67630) {
  %83 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 1>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bf3230)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b67630)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bf3230) {
      %83 = "llvm.getelementptr"(%arg1) {rawConstantIndices = array<i32: 1>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b5b5a0) {
  "scf.yield"(%84) : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'scf.yield -> ()' {
    ** Insert  : 'scf.yield'(0x3be79c0)
    ** Replace : 'scf.yield'(0x3b5b5a0)

    //===-------------------------------------------===//
    Legalizing operation : 'scf.yield'(0x3be79c0) {
      "scf.yield"(%83) : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b5d530) {
  "scf.yield"() : () -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.while'(0x3b6cc00) {
  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'scf.while -> ()' {
    ** Insert  : 'scf.while'(0x3be7ae0)
    ** Replace : 'scf.while'(0x3b6cc00)

    //===-------------------------------------------===//
    Legalizing operation : 'scf.while'(0x3be7ae0) {
    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.addrcmp'(0x3b66d80) {
  %71 = "rmem.addrcmp"(<<UNKNOWN SSA VALUE>>, %59) {predicate = 1 : i64} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> i1

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.addrcmp -> ()' {
    ** Insert  : 'llvm.icmp'(0x3be7cd0)
    ** Replace : 'rmem.addrcmp'(0x3b66d80)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.icmp'(0x3be7cd0) {
      %71 = "llvm.icmp"(%arg1, %58) {predicate = 1 : i64} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> i1

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.condition'(0x3b67580) {
  "scf.condition"(%72, <<UNKNOWN SSA VALUE>>) : (i1, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'scf.condition -> ()' {
    ** Insert  : 'scf.condition'(0x3be7d70)
    ** Replace : 'scf.condition'(0x3b67580)

    //===-------------------------------------------===//
    Legalizing operation : 'scf.condition'(0x3be7d70) {
      "scf.condition"(%71, %arg1) : (i1, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b66f60) {
  %71 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 6>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i64>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bf8c00)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b66f60)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bf8c00) {
      %71 = "llvm.getelementptr"(%arg1) {rawConstantIndices = array<i32: 0, 6>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3b66c40) {
  "rmem.llvm.store"(%11, %72) : (i64, !rmem.rmref<1, !llvm.ptr<i64>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bf85f0)
    ** Insert  : 'llvm.call'(0x3bf8680)
    ** Insert  : 'llvm.call'(0x3bf8710)
    ** Insert  : 'llvm.bitcast'(0x3bf87a0)
    ** Insert  : 'llvm.store'(0x3bf8820)
    ** Replace : 'rmem.llvm.store'(0x3b66c40)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bf85f0) {
      %73 = "llvm.ptrtoint"(%71) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bf8680) {
      %74 = "llvm.call"(%73) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bf8710) {
      %75 = "llvm.call"(%74) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bf87a0) {
      %76 = "llvm.bitcast"(%75) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3bf8820) {
      "llvm.store"(%11, %76) : (i64, !llvm.ptr<i64>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b68ee0) {
  %77 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 3>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i32>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bf88d0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b68ee0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bf88d0) {
      %77 = "llvm.getelementptr"(%arg1) {rawConstantIndices = array<i32: 0, 3>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i32>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3b66fe0) {
  "rmem.llvm.store"(%4, %78) : (i32, !rmem.rmref<1, !llvm.ptr<i32>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bf8960)
    ** Insert  : 'llvm.call'(0x3bf89f0)
    ** Insert  : 'llvm.call'(0x3bf8a80)
    ** Insert  : 'llvm.bitcast'(0x3bf8b10)
    ** Insert  : 'llvm.store'(0x3be7e10)
    ** Replace : 'rmem.llvm.store'(0x3b66fe0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bf8960) {
      %79 = "llvm.ptrtoint"(%77) : (!llvm.ptr<i32>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bf89f0) {
      %80 = "llvm.call"(%79) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bf8a80) {
      %81 = "llvm.call"(%80) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bf8b10) {
      %82 = "llvm.bitcast"(%81) : (!llvm.ptr<i8>) -> !llvm.ptr<i32>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3be7e10) {
      "llvm.store"(%4, %82) : (i32, !llvm.ptr<i32>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b6a500) {
  %83 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 4>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bf8c90)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b6a500)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bf8c90) {
      %83 = "llvm.getelementptr"(%arg1) {rawConstantIndices = array<i32: 0, 4>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b6a590) {
  %85 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 1>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bf90c0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b6a590)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bf90c0) {
      %85 = "llvm.getelementptr"(%arg1) {rawConstantIndices = array<i32: 0, 1>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b6a620) {
  %87 = "rmem.llvm.load"(%86) : (!rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>) -> !llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bf9150)
    ** Insert  : 'llvm.call'(0x3be7ec0)
    ** Insert  : 'llvm.call'(0x3be7f50)
    ** Insert  : 'llvm.bitcast'(0x3be7fe0)
    ** Insert  : 'llvm.load'(0x3be8070)
    ** Replace : 'rmem.llvm.load'(0x3b6a620)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bf9150) {
      %87 = "llvm.ptrtoint"(%85) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be7ec0) {
      %88 = "llvm.call"(%87) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be7f50) {
      %89 = "llvm.call"(%88) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be7fe0) {
      %90 = "llvm.bitcast"(%89) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3be8070) {
      %91 = "llvm.load"(%90) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b6a6b0) {
  %93 = "rmem.llvm.getelementptr"(%92) {structIndices = array<i32: 0, 7>} : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>) -> !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bf8400)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b6a6b0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bf8400) {
      %93 = "llvm.getelementptr"(%91) {rawConstantIndices = array<i32: 0, 7>} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b6a740) {
  %95 = "rmem.llvm.load"(%94) : (!llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3be8710)
    ** Replace : 'rmem.llvm.load'(0x3b6a740)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3be8710) {
      %95 = "llvm.load"(%93) : (!llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3b68f60) {
  "rmem.llvm.store"(%96, %84) : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bf8490)
    ** Insert  : 'llvm.call'(0x3bf8520)
    ** Insert  : 'llvm.call'(0x3be8100)
    ** Insert  : 'llvm.bitcast'(0x3be8190)
    ** Insert  : 'llvm.store'(0x3be8210)
    ** Replace : 'rmem.llvm.store'(0x3b68f60)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bf8490) {
      %97 = "llvm.ptrtoint"(%83) : (!llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bf8520) {
      %98 = "llvm.call"(%97) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be8100) {
      %99 = "llvm.call"(%98) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be8190) {
      %100 = "llvm.bitcast"(%99) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3be8210) {
      "llvm.store"(%95, %100) : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b6a870) {
  %101 = "rmem.llvm.load"(%86) : (!rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>) -> !llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be82c0)
    ** Insert  : 'llvm.call'(0x3be8350)
    ** Insert  : 'llvm.call'(0x3be83e0)
    ** Insert  : 'llvm.bitcast'(0x3be8470)
    ** Insert  : 'llvm.load'(0x3be8500)
    ** Replace : 'rmem.llvm.load'(0x3b6a870)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be82c0) {
      %101 = "llvm.ptrtoint"(%85) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be8350) {
      %102 = "llvm.call"(%101) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be83e0) {
      %103 = "llvm.call"(%102) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be8470) {
      %104 = "llvm.bitcast"(%103) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3be8500) {
      %105 = "llvm.load"(%104) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b6a900) {
  %107 = "rmem.llvm.getelementptr"(%106) {structIndices = array<i32: 0, 7>} : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>) -> !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3be8590)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b6a900)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3be8590) {
      %107 = "llvm.getelementptr"(%105) {rawConstantIndices = array<i32: 0, 7>} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3b6a7c0) {
  "rmem.llvm.store"(<<UNKNOWN SSA VALUE>>, %108) : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.store'(0x3bf75d0)
    ** Replace : 'rmem.llvm.store'(0x3b6a7c0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3bf75d0) {
      "llvm.store"(%arg1, %107) : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b6aa30) {
  %109 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 5>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3be8620)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b6aa30)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3be8620) {
      %109 = "llvm.getelementptr"(%arg1) {rawConstantIndices = array<i32: 0, 5>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b6cae0) {
  %111 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 2>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3be7a50)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b6cae0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3be7a50) {
      %111 = "llvm.getelementptr"(%arg1) {rawConstantIndices = array<i32: 0, 2>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b6cb70) {
  %113 = "rmem.llvm.load"(%112) : (!rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>) -> !llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bfb800)
    ** Insert  : 'llvm.call'(0x3bfb1f0)
    ** Insert  : 'llvm.call'(0x3bfb280)
    ** Insert  : 'llvm.bitcast'(0x3bfb310)
    ** Insert  : 'llvm.load'(0x3bfb3a0)
    ** Replace : 'rmem.llvm.load'(0x3b6cb70)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bfb800) {
      %113 = "llvm.ptrtoint"(%111) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bfb1f0) {
      %114 = "llvm.call"(%113) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bfb280) {
      %115 = "llvm.call"(%114) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bfb310) {
      %116 = "llvm.bitcast"(%115) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bfb3a0) {
      %117 = "llvm.load"(%116) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b66e30) {
  %119 = "rmem.llvm.getelementptr"(%118) {structIndices = array<i32: 0, 8>} : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>) -> !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bfb430)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b66e30)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bfb430) {
      %119 = "llvm.getelementptr"(%117) {rawConstantIndices = array<i32: 0, 8>} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b6ddb0) {
  %121 = "rmem.llvm.load"(%120) : (!llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bfb4c0)
    ** Replace : 'rmem.llvm.load'(0x3b6ddb0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bfb4c0) {
      %121 = "llvm.load"(%119) : (!llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3b6a980) {
  "rmem.llvm.store"(%122, %110) : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bfb550)
    ** Insert  : 'llvm.call'(0x3bfb5e0)
    ** Insert  : 'llvm.call'(0x3bfb670)
    ** Insert  : 'llvm.bitcast'(0x3bfb700)
    ** Insert  : 'llvm.store'(0x3bf76d0)
    ** Replace : 'rmem.llvm.store'(0x3b6a980)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bfb550) {
      %123 = "llvm.ptrtoint"(%109) : (!llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bfb5e0) {
      %124 = "llvm.call"(%123) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bfb670) {
      %125 = "llvm.call"(%124) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bfb700) {
      %126 = "llvm.bitcast"(%125) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3bf76d0) {
      "llvm.store"(%121, %126) : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b6eef0) {
  %127 = "rmem.llvm.load"(%112) : (!rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>) -> !llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bfbea0)
    ** Insert  : 'llvm.call'(0x3bfb890)
    ** Insert  : 'llvm.call'(0x3bfb920)
    ** Insert  : 'llvm.bitcast'(0x3bfb9b0)
    ** Insert  : 'llvm.load'(0x3bfba40)
    ** Replace : 'rmem.llvm.load'(0x3b6eef0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bfbea0) {
      %127 = "llvm.ptrtoint"(%111) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bfb890) {
      %128 = "llvm.call"(%127) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bfb920) {
      %129 = "llvm.call"(%128) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bfb9b0) {
      %130 = "llvm.bitcast"(%129) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bfba40) {
      %131 = "llvm.load"(%130) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b6ff90) {
  %133 = "rmem.llvm.getelementptr"(%132) {structIndices = array<i32: 0, 8>} : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>) -> !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bfbad0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b6ff90)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bfbad0) {
      %133 = "llvm.getelementptr"(%131) {rawConstantIndices = array<i32: 0, 8>} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3b6de30) {
  "rmem.llvm.store"(<<UNKNOWN SSA VALUE>>, %134) : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.store'(0x3bfbbe0)
    ** Replace : 'rmem.llvm.store'(0x3b6de30)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3bfbbe0) {
      "llvm.store"(%arg1, %133) : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b710d0) {
  %135 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 1>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bfbb60)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b710d0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bfbb60) {
      %135 = "llvm.getelementptr"(%arg1) {rawConstantIndices = array<i32: 1>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b5c420) {
  "scf.yield"(%136) : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'scf.yield -> ()' {
    ** Insert  : 'scf.yield'(0x3bfbd10)
    ** Replace : 'scf.yield'(0x3b5c420)

    //===-------------------------------------------===//
    Legalizing operation : 'scf.yield'(0x3bfbd10) {
      "scf.yield"(%135) : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b5c710) {
  "scf.yield"() : () -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b686d0) {
  %60 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 5>} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bfbc90)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b686d0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bfbc90) {
      %60 = "llvm.getelementptr"(%arg0) {rawConstantIndices = array<i32: 0, 5>} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b68760) {
  %62 = "rmem.llvm.load"(%61) : (!llvm.ptr<i64>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bfbda0)
    ** Replace : 'rmem.llvm.load'(0x3b68760)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bfbda0) {
      %62 = "llvm.load"(%60) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x3b687f0) {
  %64 = "arith.addi"(%63, %52#1) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3b70010) {
  "rmem.llvm.store"(%64, %61) : (i64, !llvm.ptr<i64>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.store'(0x3bf7770)
    ** Replace : 'rmem.llvm.store'(0x3b70010)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3bf7770) {
      "llvm.store"(%64, %60) : (i64, !llvm.ptr<i64>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b688a0) {
  %65 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 7>} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bfbf30)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b688a0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bfbf30) {
      %65 = "llvm.getelementptr"(%arg0) {rawConstantIndices = array<i32: 0, 7>} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b68930) {
  %67 = "rmem.llvm.load"(%66) : (!llvm.ptr<i64>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bfbfc0)
    ** Replace : 'rmem.llvm.load'(0x3b68930)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bfbfc0) {
      %67 = "llvm.load"(%65) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x3b68a80) {
  %69 = "arith.addi"(%68, %52#1) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3b689d0) {
  "rmem.llvm.store"(%69, %66) : (i64, !llvm.ptr<i64>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.store'(0x3bf7810)
    ** Replace : 'rmem.llvm.store'(0x3b689d0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3bf7810) {
      "llvm.store"(%69, %65) : (i64, !llvm.ptr<i64>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b68b30) {
  %70 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 8>} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bfc050)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b68b30)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bfc050) {
      %70 = "llvm.getelementptr"(%arg0) {rawConstantIndices = array<i32: 0, 8>} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b68bc0) {
  %72 = "rmem.llvm.load"(%71) : (!llvm.ptr<i64>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bfc0e0)
    ** Replace : 'rmem.llvm.load'(0x3b68bc0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bfc0e0) {
      %72 = "llvm.load"(%70) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.subi'(0x3b73220) {
  %74 = "arith.subi"(%73, %52#1) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3b72160) {
  "rmem.llvm.store"(%74, %71) : (i64, !llvm.ptr<i64>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.store'(0x3bf78b0)
    ** Replace : 'rmem.llvm.store'(0x3b72160)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3bf78b0) {
      "llvm.store"(%74, %70) : (i64, !llvm.ptr<i64>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3af53b0) {
  "scf.yield"() : () -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b732c0) {
  "scf.yield"(%52#1) : (i64) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b5d6a0) {
  "scf.yield"(%24#1) : (i64) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.return'(0x3b0fbd0) {
  "func.return"(%25) : (i64) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.func'(0x3b20fa0) {
  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'func.func -> ()' {
    ** Insert  : 'func.func'(0x3b025d0)
    ** Erase   : 'func.func'(0x3b20fa0)

    //===-------------------------------------------===//
    Legalizing operation : 'func.func'(0x3b025d0) {
    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.func'(0x3b1cb00) {
  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'func.func -> ()' {
    ** Insert  : 'func.func'(0x3b5a370)
    ** Erase   : 'func.func'(0x3b1cb00)

    //===-------------------------------------------===//
    Legalizing operation : 'func.func'(0x3b5a370) {
    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3acfb60) {
  %0 = "arith.constant"() {value = 0 : i64} : () -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3acbd40) {
  %1 = "arith.constant"() {value = -2 : i64} : () -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3ab3790) {
  %2 = "arith.constant"() {value = 1 : i32} : () -> i32

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3a413b0) {
  %3 = "arith.constant"() {value = 0 : i32} : () -> i32

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.constant'(0x3b5a440) {
  %4 = "arith.constant"() {value = 1 : i64} : () -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x3af54f0) {
  %5 = "arith.cmpi"(<<UNKNOWN SSA VALUE>>, %0) {predicate = 1 : i64} : (i64, i64) -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x3b75d10) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b749c0) {
  %8 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 7>} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bfc170)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b749c0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bfc170) {
      %8 = "llvm.getelementptr"(%arg0) {rawConstantIndices = array<i32: 0, 7>} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b74a50) {
  %10 = "rmem.llvm.load"(%9) : (!llvm.ptr<i64>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bfc250)
    ** Replace : 'rmem.llvm.load'(0x3b74a50)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bfc250) {
      %10 = "llvm.load"(%8) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b75c80) {
  "scf.yield"(%11) : (i64) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b75bb0) {
  %8 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 24>} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bfc2e0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b75bb0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bfc2e0) {
      %8 = "llvm.getelementptr"(%arg0) {rawConstantIndices = array<i32: 0, 24>} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b3b240) {
  %10 = "rmem.llvm.load"(%9) : (!llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bfc370)
    ** Replace : 'rmem.llvm.load'(0x3b3b240)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bfc370) {
      %10 = "llvm.load"(%8) : (!llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b3b2d0) {
  %12 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 23>} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bfc400)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b3b2d0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bfc400) {
      %12 = "llvm.getelementptr"(%arg0) {rawConstantIndices = array<i32: 0, 23>} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b3d570) {
  %14 = "rmem.llvm.load"(%13) : (!llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bfc490)
    ** Replace : 'rmem.llvm.load'(0x3b3d570)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bfc490) {
      %14 = "llvm.load"(%12) : (!llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b3d600) {
  %16 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 5>} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bfc520)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b3d600)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bfc520) {
      %16 = "llvm.getelementptr"(%arg0) {rawConstantIndices = array<i32: 0, 5>} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b3d690) {
  %18 = "rmem.llvm.load"(%17) : (!llvm.ptr<i64>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bfc5b0)
    ** Replace : 'rmem.llvm.load'(0x3b3d690)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bfc5b0) {
      %18 = "llvm.load"(%16) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b3e7f0) {
  %20 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 7>} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bfc640)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b3e7f0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bfc640) {
      %20 = "llvm.getelementptr"(%arg0) {rawConstantIndices = array<i32: 0, 7>} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b3e880) {
  %22 = "rmem.llvm.load"(%21) : (!llvm.ptr<i64>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bfc6d0)
    ** Replace : 'rmem.llvm.load'(0x3b3e880)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bfc6d0) {
      %22 = "llvm.load"(%20) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.subi'(0x3b3b360) {
  %24 = "arith.subi"(%19, %23) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3af8e30) {
  %25 = "rmem.llvm.getelementptr"(%15, %24) {structIndices = array<i32>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bf7960)
    ** Replace : 'rmem.llvm.getelementptr'(0x3af8e30)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bf7960) {
      %25 = "llvm.getelementptr"(%14, %24) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.while'(0x3b50ac0) {
  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'scf.while -> ()' {
    ** Insert  : 'scf.while'(0x3bf7ac0)
    ** Replace : 'scf.while'(0x3b50ac0)

    //===-------------------------------------------===//
    Legalizing operation : 'scf.while'(0x3bf7ac0) {
    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.addrcmp'(0x3af9050) {
  %29 = "rmem.addrcmp"(<<UNKNOWN SSA VALUE>>, %11) {predicate = 6 : i64} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> i1

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.addrcmp -> ()' {
    ** Insert  : 'llvm.icmp'(0x3bf8040)
    ** Replace : 'rmem.addrcmp'(0x3af9050)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.icmp'(0x3bf8040) {
      %29 = "llvm.icmp"(%arg3, %10) {predicate = 6 : i64} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> i1

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.condition'(0x3b5c820) {
  "scf.condition"(%30, <<UNKNOWN SSA VALUE>>, <<UNKNOWN SSA VALUE>>, <<UNKNOWN SSA VALUE>>) : (i1, i64, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'scf.condition -> ()' {
    ** Insert  : 'scf.condition'(0x3a1c300)
    ** Replace : 'scf.condition'(0x3b5c820)

    //===-------------------------------------------===//
    Legalizing operation : 'scf.condition'(0x3a1c300) {
      "scf.condition"(%29, %arg5, %arg3, %arg4) : (i1, i64, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b51390) {
  %29 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 3>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i32>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bfc760)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b51390)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bfc760) {
      %29 = "llvm.getelementptr"(%arg4) {rawConstantIndices = array<i32: 0, 3>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i32>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b51420) {
  %31 = "rmem.llvm.load"(%30) : (!rmem.rmref<1, !llvm.ptr<i32>>) -> i32

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bf80f0)
    ** Insert  : 'llvm.call'(0x3bf8180)
    ** Insert  : 'llvm.call'(0x3bf8210)
    ** Insert  : 'llvm.bitcast'(0x3bf82a0)
    ** Insert  : 'llvm.load'(0x3bf8330)
    ** Replace : 'rmem.llvm.load'(0x3b51420)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bf80f0) {
      %31 = "llvm.ptrtoint"(%29) : (!llvm.ptr<i32>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bf8180) {
      %32 = "llvm.call"(%31) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bf8210) {
      %33 = "llvm.call"(%32) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bf82a0) {
      %34 = "llvm.bitcast"(%33) : (!llvm.ptr<i8>) -> !llvm.ptr<i32>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bf8330) {
      %35 = "llvm.load"(%34) : (!llvm.ptr<i32>) -> i32

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x3b514b0) {
  %37 = "arith.cmpi"(%36, %2) {predicate = 0 : i64} : (i32, i32) -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x3b51dc0) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b51560) {
  %42 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 0>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<i64>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bfe620)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b51560)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bfe620) {
      %42 = "llvm.getelementptr"(%arg4) {rawConstantIndices = array<i32: 0, 0>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b516d0) {
  %44 = "rmem.llvm.load"(%43) : (!rmem.rmref<1, !llvm.ptr<i64>>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be41e0)
    ** Insert  : 'llvm.call'(0x3be4270)
    ** Insert  : 'llvm.call'(0x3be4300)
    ** Insert  : 'llvm.bitcast'(0x3be3bd0)
    ** Insert  : 'llvm.load'(0x3be3c60)
    ** Replace : 'rmem.llvm.load'(0x3b516d0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be41e0) {
      %44 = "llvm.ptrtoint"(%42) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be4270) {
      %45 = "llvm.call"(%44) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be4300) {
      %46 = "llvm.call"(%45) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be3bd0) {
      %47 = "llvm.bitcast"(%46) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3be3c60) {
      %48 = "llvm.load"(%47) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b51760) {
  %50 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 1>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3be3cf0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b51760)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3be3cf0) {
      %50 = "llvm.getelementptr"(%arg4) {rawConstantIndices = array<i32: 0, 1>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b517f0) {
  %52 = "rmem.llvm.load"(%51) : (!rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>) -> !llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3be3d80)
    ** Insert  : 'llvm.call'(0x3be3e10)
    ** Insert  : 'llvm.call'(0x3be3ea0)
    ** Insert  : 'llvm.bitcast'(0x3be3f30)
    ** Insert  : 'llvm.load'(0x3be3fc0)
    ** Replace : 'rmem.llvm.load'(0x3b517f0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3be3d80) {
      %52 = "llvm.ptrtoint"(%50) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be3e10) {
      %53 = "llvm.call"(%52) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3be3ea0) {
      %54 = "llvm.call"(%53) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3be3f30) {
      %55 = "llvm.bitcast"(%54) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3be3fc0) {
      %56 = "llvm.load"(%55) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b51880) {
  %58 = "rmem.llvm.getelementptr"(%57) {structIndices = array<i32: 0, 0>} : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>) -> !llvm.ptr<i64>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3be4050)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b51880)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3be4050) {
      %58 = "llvm.getelementptr"(%56) {rawConstantIndices = array<i32: 0, 0>} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b51910) {
  %60 = "rmem.llvm.load"(%59) : (!llvm.ptr<i64>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3be40e0)
    ** Replace : 'rmem.llvm.load'(0x3b51910)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3be40e0) {
      %60 = "llvm.load"(%58) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.subi'(0x3b519a0) {
  %62 = "arith.subi"(%49, %61) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b51a50) {
  %63 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 2>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bfe010)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b51a50)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bfe010) {
      %63 = "llvm.getelementptr"(%arg4) {rawConstantIndices = array<i32: 0, 2>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b51ae0) {
  %65 = "rmem.llvm.load"(%64) : (!rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>) -> !llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bfe0a0)
    ** Insert  : 'llvm.call'(0x3bfe130)
    ** Insert  : 'llvm.call'(0x3bfe1c0)
    ** Insert  : 'llvm.bitcast'(0x3bfe250)
    ** Insert  : 'llvm.load'(0x3bfe2e0)
    ** Replace : 'rmem.llvm.load'(0x3b51ae0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bfe0a0) {
      %65 = "llvm.ptrtoint"(%63) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bfe130) {
      %66 = "llvm.call"(%65) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bfe1c0) {
      %67 = "llvm.call"(%66) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bfe250) {
      %68 = "llvm.bitcast"(%67) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bfe2e0) {
      %69 = "llvm.load"(%68) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b51b70) {
  %71 = "rmem.llvm.getelementptr"(%70) {structIndices = array<i32: 0, 0>} : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>) -> !llvm.ptr<i64>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bfe370)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b51b70)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bfe370) {
      %71 = "llvm.getelementptr"(%69) {rawConstantIndices = array<i32: 0, 0>} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b51c00) {
  %73 = "rmem.llvm.load"(%72) : (!llvm.ptr<i64>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bfe400)
    ** Replace : 'rmem.llvm.load'(0x3b51c00)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bfe400) {
      %73 = "llvm.load"(%71) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x3b51c90) {
  %75 = "arith.addi"(%62, %74) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b51d30) {
  "scf.yield"(%75) : (i64) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b515f0) {
  %42 = "rmem.llvm.load"(%30) : (!rmem.rmref<1, !llvm.ptr<i32>>) -> i32

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bfe490)
    ** Insert  : 'llvm.call'(0x3bfe520)
    ** Insert  : 'llvm.call'(0x3bea180)
    ** Insert  : 'llvm.bitcast'(0x3bea210)
    ** Insert  : 'llvm.load'(0x3bea2a0)
    ** Replace : 'rmem.llvm.load'(0x3b515f0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bfe490) {
      %42 = "llvm.ptrtoint"(%29) : (!llvm.ptr<i32>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bfe520) {
      %43 = "llvm.call"(%42) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bea180) {
      %44 = "llvm.call"(%43) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bea210) {
      %45 = "llvm.bitcast"(%44) : (!llvm.ptr<i8>) -> !llvm.ptr<i32>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bea2a0) {
      %46 = "llvm.load"(%45) : (!llvm.ptr<i32>) -> i32

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x3b51ea0) {
  %48 = "arith.cmpi"(%47, %3) {predicate = 0 : i64} : (i32, i32) -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x3b51fd0) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b51f50) {
  %49 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 1>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3beadb0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b51f50)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3beadb0) {
      %49 = "llvm.getelementptr"(%arg4) {rawConstantIndices = array<i32: 0, 1>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b32170) {
  %51 = "rmem.llvm.load"(%50) : (!rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>) -> !llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3beae40)
    ** Insert  : 'llvm.call'(0x3beaed0)
    ** Insert  : 'llvm.call'(0x3beaf60)
    ** Insert  : 'llvm.bitcast'(0x3beaff0)
    ** Insert  : 'llvm.load'(0x3beb080)
    ** Replace : 'rmem.llvm.load'(0x3b32170)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3beae40) {
      %51 = "llvm.ptrtoint"(%49) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3beaed0) {
      %52 = "llvm.call"(%51) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3beaf60) {
      %53 = "llvm.call"(%52) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3beaff0) {
      %54 = "llvm.bitcast"(%53) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3beb080) {
      %55 = "llvm.load"(%54) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b33210) {
  %57 = "rmem.llvm.getelementptr"(%56) {structIndices = array<i32: 0, 6>} : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>) -> !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bea330)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b33210)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bea330) {
      %57 = "llvm.getelementptr"(%55) {rawConstantIndices = array<i32: 0, 6>} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b332a0) {
  %59 = "rmem.llvm.load"(%58) : (!llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bffcd0)
    ** Replace : 'rmem.llvm.load'(0x3b332a0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bffcd0) {
      %59 = "llvm.load"(%57) : (!llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.addrcmp'(0x3b52110) {
  %61 = "rmem.addrcmp"(%60, <<UNKNOWN SSA VALUE>>) {predicate = 0 : i64} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> i1

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.addrcmp -> ()' {
    ** Insert  : 'llvm.icmp'(0x3bfdea0)
    ** Replace : 'rmem.addrcmp'(0x3b52110)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.icmp'(0x3bfdea0) {
      %61 = "llvm.icmp"(%59, %arg4) {predicate = 0 : i64} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> i1

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x3b35670) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b33330) {
  %63 = "rmem.llvm.load"(%50) : (!rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>) -> !llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bfde10)
    ** Insert  : 'llvm.call'(0x3bfdf50)
    ** Insert  : 'llvm.call'(0x3bea3c0)
    ** Insert  : 'llvm.bitcast'(0x3bea450)
    ** Insert  : 'llvm.load'(0x3bea4e0)
    ** Replace : 'rmem.llvm.load'(0x3b33330)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bfde10) {
      %63 = "llvm.ptrtoint"(%49) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bfdf50) {
      %64 = "llvm.call"(%63) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bea3c0) {
      %65 = "llvm.call"(%64) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bea450) {
      %66 = "llvm.bitcast"(%65) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bea4e0) {
      %67 = "llvm.load"(%66) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b34550) {
  %69 = "rmem.llvm.getelementptr"(%68) {structIndices = array<i32: 0, 6>} : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>) -> !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bff6c0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b34550)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bff6c0) {
      %69 = "llvm.getelementptr"(%67) {rawConstantIndices = array<i32: 0, 6>} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3b73340) {
  "rmem.llvm.store"(<<UNKNOWN SSA VALUE>>, %70) : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.store'(0x3beeff0)
    ** Replace : 'rmem.llvm.store'(0x3b73340)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3beeff0) {
      "llvm.store"(%arg5, %69) : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b5d210) {
  "scf.yield"() : () -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b355f0) {
  %63 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 2>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3beac40)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b355f0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3beac40) {
      %63 = "llvm.getelementptr"(%arg4) {rawConstantIndices = array<i32: 0, 2>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b367c0) {
  %65 = "rmem.llvm.load"(%64) : (!rmem.rmref<1, !llvm.ptr<ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>>>) -> !llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3beacd0)
    ** Insert  : 'llvm.call'(0x3bff750)
    ** Insert  : 'llvm.call'(0x3bff7e0)
    ** Insert  : 'llvm.bitcast'(0x3bff870)
    ** Insert  : 'llvm.load'(0x3bff900)
    ** Replace : 'rmem.llvm.load'(0x3b367c0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3beacd0) {
      %65 = "llvm.ptrtoint"(%63) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bff750) {
      %66 = "llvm.call"(%65) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bff7e0) {
      %67 = "llvm.call"(%66) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bff870) {
      %68 = "llvm.bitcast"(%67) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bff900) {
      %69 = "llvm.load"(%68) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b36850) {
  %71 = "rmem.llvm.getelementptr"(%70) {structIndices = array<i32: 0, 6>} : (!llvm.ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>) -> !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bff990)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b36850)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bff990) {
      %71 = "llvm.getelementptr"(%69) {rawConstantIndices = array<i32: 0, 6>} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3b333b0) {
  "rmem.llvm.store"(<<UNKNOWN SSA VALUE>>, %72) : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.store'(0x3beef50)
    ** Replace : 'rmem.llvm.store'(0x3b333b0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3beef50) {
      "llvm.store"(%arg5, %71) : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b1d070) {
  "scf.yield"() : () -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b59fc0) {
  "scf.yield"() : () -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b368d0) {
  "scf.yield"(%1) : (i64) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x3b36960) {
  %39 = "arith.cmpi"(%38, <<UNKNOWN SSA VALUE>>) {predicate = 4 : i64} : (i64, i64) -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x3b37cf0) {
  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'scf.if -> ()' {
    ** Insert  : 'scf.if'(0x3bef410)
    ** Replace : 'scf.if'(0x3b37cf0)

    //===-------------------------------------------===//
    Legalizing operation : 'scf.if'(0x3bef410) {
    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x3b36ab0) {
  %43 = "arith.addi"(<<UNKNOWN SSA VALUE>>, %4) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b36a00) {
  "scf.yield"(<<UNKNOWN SSA VALUE>>, %43) : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'scf.yield -> ()' {
    ** Insert  : 'scf.yield'(0x3bffaa0)
    ** Replace : 'scf.yield'(0x3b36a00)

    //===-------------------------------------------===//
    Legalizing operation : 'scf.yield'(0x3bffaa0) {
      "scf.yield"(%arg5, %43) : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b37c50) {
  %43 = "rmem.llvm.load"(<<UNKNOWN SSA VALUE>>) : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bffa20)
    ** Insert  : 'llvm.call'(0x3bffba0)
    ** Insert  : 'llvm.call'(0x3bffc30)
    ** Insert  : 'llvm.bitcast'(0x3bea630)
    ** Insert  : 'llvm.load'(0x3bea6c0)
    ** Replace : 'rmem.llvm.load'(0x3b37c50)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bffa20) {
      %43 = "llvm.ptrtoint"(%arg4) : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bffba0) {
      %44 = "llvm.call"(%43) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bffc30) {
      %45 = "llvm.call"(%44) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bea630) {
      %46 = "llvm.bitcast"(%45) : (!llvm.ptr<i8>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bea6c0) {
      %47 = "llvm.load"(%46) : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3b36b50) {
  "rmem.llvm.store"(%48, <<UNKNOWN SSA VALUE>>) : (!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.ptrtoint'(0x3bea750)
    ** Insert  : 'llvm.call'(0x3bea7e0)
    ** Insert  : 'llvm.call'(0x3bea870)
    ** Insert  : 'llvm.bitcast'(0x3bea900)
    ** Insert  : 'llvm.store'(0x3bea980)
    ** Replace : 'rmem.llvm.store'(0x3b36b50)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.ptrtoint'(0x3bea750) {
      %49 = "llvm.ptrtoint"(%arg5) : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bea7e0) {
      %50 = "llvm.call"(%49) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.call'(0x3bea870) {
      %51 = "llvm.call"(%50) {callee = @cache_access_mut, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.bitcast'(0x3bea900) {
      %52 = "llvm.bitcast"(%51) : (!llvm.ptr<i8>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3bea980) {
      "llvm.store"(%47, %52) : (!llvm.struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b38e70) {
  %53 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 1>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3beaa30)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b38e70)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3beaa30) {
      %53 = "llvm.getelementptr"(%arg5) {rawConstantIndices = array<i32: 1>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b37db0) {
  "scf.yield"(%54, <<UNKNOWN SSA VALUE>>) : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'scf.yield -> ()' {
    ** Insert  : 'scf.yield'(0x3beab40)
    ** Replace : 'scf.yield'(0x3b37db0)

    //===-------------------------------------------===//
    Legalizing operation : 'scf.yield'(0x3beab40) {
      "scf.yield"(%53, %arg3) : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b39fb0) {
  %42 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 1>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3beaac0)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b39fb0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3beaac0) {
      %42 = "llvm.getelementptr"(%arg4) {rawConstantIndices = array<i32: 1>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b3a030) {
  "scf.yield"(%43, %41#0, %41#1) : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'scf.yield -> ()' {
    ** Insert  : 'scf.yield'(0x3bfdb00)
    ** Replace : 'scf.yield'(0x3b3a030)

    //===-------------------------------------------===//
    Legalizing operation : 'scf.yield'(0x3bfdb00) {
      "scf.yield"(%42, %40#0, %40#1) : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b3a0f0) {
  "scf.yield"(%28#0) : (i64) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.cmpi'(0x3b50bc0) {
  %7 = "arith.cmpi"(%6, %0) {predicate = 1 : i64} : (i64, i64) -> i1

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.if'(0x3afc8c0) {
} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b50c70) {
  %8 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 5>} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bfda80)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b50c70)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bfda80) {
      %8 = "llvm.getelementptr"(%arg0) {rawConstantIndices = array<i32: 0, 5>} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b50de0) {
  %10 = "rmem.llvm.load"(%9) : (!llvm.ptr<i64>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bfdca0)
    ** Replace : 'rmem.llvm.load'(0x3b50de0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bfdca0) {
      %10 = "llvm.load"(%8) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.subi'(0x3b50e70) {
  %12 = "arith.subi"(%11, %6) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3b38ef0) {
  "rmem.llvm.store"(%12, %9) : (i64, !llvm.ptr<i64>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.store'(0x3bfdd20)
    ** Replace : 'rmem.llvm.store'(0x3b38ef0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3bfdd20) {
      "llvm.store"(%12, %8) : (i64, !llvm.ptr<i64>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3b50f20) {
  %13 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 7>} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3c00d70)
    ** Replace : 'rmem.llvm.getelementptr'(0x3b50f20)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3c00d70) {
      %13 = "llvm.getelementptr"(%arg0) {rawConstantIndices = array<i32: 0, 7>} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3b50fb0) {
  %15 = "rmem.llvm.load"(%14) : (!llvm.ptr<i64>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bfd800)
    ** Replace : 'rmem.llvm.load'(0x3b50fb0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bfd800) {
      %15 = "llvm.load"(%13) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.subi'(0x3afb260) {
  %17 = "arith.subi"(%16, %6) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3afb1b0) {
  "rmem.llvm.store"(%17, %14) : (i64, !llvm.ptr<i64>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.store'(0x3bfd880)
    ** Replace : 'rmem.llvm.store'(0x3afb1b0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3bfd880) {
      "llvm.store"(%17, %13) : (i64, !llvm.ptr<i64>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3afb310) {
  %18 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 24>} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3bfd930)
    ** Replace : 'rmem.llvm.getelementptr'(0x3afb310)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3bfd930) {
      %18 = "llvm.getelementptr"(%arg0) {rawConstantIndices = array<i32: 0, 24>} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3afb4f0) {
  %20 = "rmem.llvm.load"(%19) : (!llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bfd9c0)
    ** Replace : 'rmem.llvm.load'(0x3afb4f0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bfd9c0) {
      %20 = "llvm.load"(%18) : (!llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.subi'(0x3afb3a0) {
  %22 = "arith.subi"(%0, %6) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3afb580) {
  %23 = "rmem.llvm.getelementptr"(%21, %22) {structIndices = array<i32>} : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64) -> !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3c00e00)
    ** Replace : 'rmem.llvm.getelementptr'(0x3afb580)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3c00e00) {
      %23 = "llvm.getelementptr"(%20, %22) {rawConstantIndices = array<i32: -2147483648>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3afb440) {
  "rmem.llvm.store"(%24, %19) : (!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !llvm.ptr<!rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.store'(0x3c00ea0)
    ** Replace : 'rmem.llvm.store'(0x3afb440)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3c00ea0) {
      "llvm.store"(%23, %18) : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.getelementptr'(0x3afb630) {
  %25 = "rmem.llvm.getelementptr"(<<UNKNOWN SSA VALUE>>) {structIndices = array<i32: 0, 8>} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.getelementptr -> ()' {
    ** Insert  : 'llvm.getelementptr'(0x3c01410)
    ** Replace : 'rmem.llvm.getelementptr'(0x3afb630)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.getelementptr'(0x3c01410) {
      %25 = "llvm.getelementptr"(%arg0) {rawConstantIndices = array<i32: 0, 8>} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> !llvm.ptr<i64>

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.load'(0x3afb6c0) {
  %27 = "rmem.llvm.load"(%26) : (!llvm.ptr<i64>) -> i64

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.load -> ()' {
    ** Insert  : 'llvm.load'(0x3bff4d0)
    ** Replace : 'rmem.llvm.load'(0x3afb6c0)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.load'(0x3bff4d0) {
      %27 = "llvm.load"(%25) : (!llvm.ptr<i64>) -> i64

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'arith.addi'(0x3afc820) {
  %29 = "arith.addi"(%28, %6) : (i64, i64) -> i64

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'rmem.llvm.store'(0x3afb760) {
  "rmem.llvm.store"(%29, %26) : (i64, !llvm.ptr<i64>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'rmem.llvm.store -> ()' {
    ** Insert  : 'llvm.store'(0x3bff550)
    ** Replace : 'rmem.llvm.store'(0x3afb760)

    //===-------------------------------------------===//
    Legalizing operation : 'llvm.store'(0x3bff550) {
      "llvm.store"(%29, %25) : (i64, !llvm.ptr<i64>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.call'(0x3b75dc0) {
  "func.call"(<<UNKNOWN SSA VALUE>>) {callee = @refresh_neighbour_lists} : (!llvm.ptr<!llvm.struct<"network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i32, i32)>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, i64, i64, i64)>>) -> ()

  * Fold {
  } -> FAILURE : unable to fold

  * Pattern : 'func.call -> ()' {
    ** Insert  : 'func.call'(0x3beeed0)
    ** Replace : 'func.call'(0x3b75dc0)

    //===-------------------------------------------===//
    Legalizing operation : 'func.call'(0x3beeed0) {
      "func.call"(%arg0) {callee = @refresh_neighbour_lists} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>) -> ()

    } -> SUCCESS : operation marked legal by the target
    //===-------------------------------------------===//
  } -> SUCCESS : pattern applied successfully
} -> SUCCESS
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'scf.yield'(0x3b5c600) {
  "scf.yield"() : () -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//

//===-------------------------------------------===//
Legalizing operation : 'func.return'(0x3afc970) {
  "func.return"(%6) : (i64) -> ()

} -> SUCCESS : operation marked legal by the target
//===-------------------------------------------===//
** Insert  : 'builtin.unrealized_conversion_cast'(0x3bff600)
** Insert  : 'builtin.unrealized_conversion_cast'(0x3c00f50)
** Insert  : 'builtin.unrealized_conversion_cast'(0x3c00fe0)
remote/implicit.remote.mlir:353:15: error: 'scf.for' op operand #0 must be index, but got 'i64'
      %22:4 = scf.for %arg1 = %18 to %17 step %c1 iter_args(%arg2 = %0, %arg3 = %c0_i64, %arg4 = %16, %arg5 = %14#1) -> (i64, i64, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc", (i64, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, ptr<!llvm.struct<"node", (i64, i32, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, ptr<!llvm.struct<"node">>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64, i32, i32)>>, i32, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, !rmem.rmref<1, !llvm.ptr<!llvm.struct<"rarc">>>, i64, i64)>>>) {
              ^
remote/implicit.remote.mlir:353:15: note: see current operation: 
%37:4 = "scf.for"(%33, %31, %2, %13, %11, %29, %27#1) ({
^bb0(%arg1: index, %arg2: i64, %arg3: i64, %arg4: !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, %arg5: !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>):
  %39 = "llvm.getelementptr"(%arg5) {rawConstantIndices = array<i32: 1>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>
  %40 = "llvm.getelementptr"(%39) {rawConstantIndices = array<i32: 0, 3>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i32>
  %41 = "llvm.ptrtoint"(%40) : (!llvm.ptr<i32>) -> i64
  %42 = "llvm.call"(%41) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128
  %43 = "llvm.call"(%42) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>
  %44 = "llvm.bitcast"(%43) : (!llvm.ptr<i8>) -> !llvm.ptr<i32>
  %45 = "llvm.load"(%44) : (!llvm.ptr<i32>) -> i32
  %46 = "arith.cmpi"(%45, %5) {predicate = 1 : i64} : (i32, i32) -> i1
  %47 = "arith.select"(%46, %39, %arg4) : (i1, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>
  "scf.if"(%46) ({
    %57 = "llvm.getelementptr"(%arg5) {rawConstantIndices = array<i32: 0, 2>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>
    %58 = "llvm.ptrtoint"(%57) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64
    %59 = "llvm.call"(%58) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128
    %60 = "llvm.call"(%59) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>
    %61 = "llvm.bitcast"(%60) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>
    %62 = "llvm.load"(%61) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>
    %63 = "llvm.getelementptr"(%62) {rawConstantIndices = array<i32: 0, 7>} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>
    %64 = "llvm.load"(%63) : (!llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>
    %65 = "llvm.getelementptr"(%64) {rawConstantIndices = array<i32: 0, 2>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>
    %66 = "llvm.ptrtoint"(%65) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64
    %67 = "llvm.call"(%66) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128
    %68 = "llvm.call"(%67) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>
    %69 = "llvm.bitcast"(%68) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>
    %70 = "llvm.load"(%69) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>
    %71 = "llvm.getelementptr"(%70) {rawConstantIndices = array<i32: 0, 9>} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>
    "llvm.store"(%arg4, %71) : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> ()
    "scf.yield"() : () -> ()
  }, {
  }) : (i1) -> ()
  %48 = "llvm.getelementptr"(%arg5) {rawConstantIndices = array<i32: 0, 3>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i32>
  %49 = "llvm.ptrtoint"(%48) : (!llvm.ptr<i32>) -> i64
  %50 = "llvm.call"(%49) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128
  %51 = "llvm.call"(%50) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>
  %52 = "llvm.bitcast"(%51) : (!llvm.ptr<i8>) -> !llvm.ptr<i32>
  %53 = "llvm.load"(%52) : (!llvm.ptr<i32>) -> i32
  %54 = "arith.cmpi"(%53, %5) {predicate = 0 : i64} : (i32, i32) -> i1
  %55:2 = "scf.if"(%54) ({
    "scf.yield"(%arg2, %arg3) : (i64, i64) -> ()
  }, {
    %57 = "llvm.getelementptr"(%arg5) {rawConstantIndices = array<i32: 0, 2>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>
    %58 = "llvm.ptrtoint"(%57) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64
    %59 = "llvm.call"(%58) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128
    %60 = "llvm.call"(%59) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>
    %61 = "llvm.bitcast"(%60) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>
    %62 = "llvm.load"(%61) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>
    %63 = "llvm.getelementptr"(%62) {rawConstantIndices = array<i32: 0, 13>} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> !llvm.ptr<i32>
    %64 = "llvm.load"(%63) : (!llvm.ptr<i32>) -> i32
    %65 = "arith.extsi"(%64) : (i32) -> i64
    %66 = "llvm.getelementptr"(%arg5) {rawConstantIndices = array<i32: 0, 7>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i64>
    %67 = "llvm.ptrtoint"(%66) : (!llvm.ptr<i64>) -> i64
    %68 = "llvm.call"(%67) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128
    %69 = "llvm.call"(%68) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>
    %70 = "llvm.bitcast"(%69) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>
    %71 = "llvm.load"(%70) : (!llvm.ptr<i64>) -> i64
    %72 = "arith.subi"(%65, %71) : (i64, i64) -> i64
    %73 = "arith.addi"(%72, %16) : (i64, i64) -> i64
    %74 = "llvm.getelementptr"(%47) {rawConstantIndices = array<i32: 0, 1>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>
    %75 = "llvm.ptrtoint"(%74) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64
    %76 = "llvm.call"(%75) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128
    %77 = "llvm.call"(%76) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>
    %78 = "llvm.bitcast"(%77) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>
    %79 = "llvm.load"(%78) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>
    %80 = "llvm.getelementptr"(%79) {rawConstantIndices = array<i32: 0, 9>} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>
    %81 = "llvm.load"(%80) : (!llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>
    %82:3 = "scf.while"(%arg2, %arg3, %81) ({
    ^bb0(%arg6: i64, %arg7: i64, %arg8: !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>):
      %83 = "llvm.icmp"(%arg8, %34) {predicate = 1 : i64} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> i1
      "scf.condition"(%83, %arg6, %arg7, %arg8) : (i1, i64, i64, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> ()
    }, {
    ^bb0(%arg6: i64, %arg7: i64, %arg8: !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>):
      %83 = "llvm.getelementptr"(%arg8) {rawConstantIndices = array<i32: 0, 1>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>
      %84 = "llvm.ptrtoint"(%83) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> i64
      %85 = "llvm.call"(%84) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128
      %86 = "llvm.call"(%85) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>
      %87 = "llvm.bitcast"(%86) : (!llvm.ptr<i8>) -> !llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>
      %88 = "llvm.load"(%87) : (!llvm.ptr<ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>>) -> !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>
      %89 = "llvm.getelementptr"(%88) {rawConstantIndices = array<i32: 0, 13>} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> !llvm.ptr<i32>
      %90 = "llvm.load"(%89) : (!llvm.ptr<i32>) -> i32
      %91 = "arith.extsi"(%90) : (i32) -> i64
      %92 = "llvm.getelementptr"(%arg8) {rawConstantIndices = array<i32: 0, 7>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<i64>
      %93 = "llvm.ptrtoint"(%92) : (!llvm.ptr<i64>) -> i64
      %94 = "llvm.call"(%93) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128
      %95 = "llvm.call"(%94) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>
      %96 = "llvm.bitcast"(%95) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>
      %97 = "llvm.load"(%96) : (!llvm.ptr<i64>) -> i64
      %98 = "arith.addi"(%91, %97) : (i64, i64) -> i64
      %99 = "arith.cmpi"(%98, %73) {predicate = 4 : i64} : (i64, i64) -> i1
      %100:3 = "scf.if"(%99) ({
        %101 = "llvm.getelementptr"(%88) {rawConstantIndices = array<i32: 0, 9>} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>
        %102 = "llvm.load"(%101) : (!llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>
        "scf.yield"(%arg6, %arg7, %102) : (i64, i64, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> ()
      }, {
        %101 = "llvm.getelementptr"(%88) {rawConstantIndices = array<i32: 0, 0>} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> !llvm.ptr<i64>
        %102 = "llvm.load"(%101) : (!llvm.ptr<i64>) -> i64
        %103 = "arith.subi"(%10, %102) : (i64, i64) -> i64
        %104 = "llvm.getelementptr"(%62) {rawConstantIndices = array<i32: 0, 0>} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> !llvm.ptr<i64>
        %105 = "llvm.load"(%104) : (!llvm.ptr<i64>) -> i64
        %106 = "arith.addi"(%103, %105) : (i64, i64) -> i64
        %107 = "arith.cmpi"(%106, %11) {predicate = 2 : i64} : (i64, i64) -> i1
        %108 = "scf.if"(%107) ({
          %111 = "llvm.load"(%35) : (!llvm.ptr<i64>) -> i64
          %112 = "arith.cmpi"(%arg7, %111) {predicate = 2 : i64} : (i64, i64) -> i1
          %113 = "scf.if"(%112) ({
            "func.call"(%23, %arg7, %88, %62, %10, %106) {callee = @insert_new_arc} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, i64, i64) -> ()
            %114 = "arith.addi"(%arg7, %12) : (i64, i64) -> i64
            "scf.yield"(%114) : (i64) -> ()
          }, {
            %114 = "llvm.ptrtoint"(%36) : (!llvm.ptr<i64>) -> i64
            %115 = "llvm.call"(%114) {callee = @cache_request, fastmathFlags = #llvm.fastmath<none>} : (i64) -> i128
            %116 = "llvm.call"(%115) {callee = @cache_access, fastmathFlags = #llvm.fastmath<none>} : (i128) -> !llvm.ptr<i8>
            %117 = "llvm.bitcast"(%116) : (!llvm.ptr<i8>) -> !llvm.ptr<i64>
            %118 = "llvm.load"(%117) : (!llvm.ptr<i64>) -> i64
            %119 = "arith.cmpi"(%118, %106) {predicate = 4 : i64} : (i64, i64) -> i1
            "scf.if"(%119) ({
              "func.call"(%arg0, %23, %88, %62, %10, %106) {callee = @replace_weaker_arc} : (!llvm.ptr<struct<"_Lowered_network", (array<200 x i8>, array<200 x i8>, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, f64, i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i64)>>, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, !llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>, i64, i64) -> ()
              "scf.yield"() : () -> ()
            }, {
            }) : (i1) -> ()
            "scf.yield"(%arg7) : (i64) -> ()
          }) : (i1) -> i64
          "scf.yield"(%113) : (i64) -> ()
        }, {
          "scf.yield"(%arg7) : (i64) -> ()
        }) : (i1) -> i64
        %109 = "llvm.getelementptr"(%88) {rawConstantIndices = array<i32: 0, 9>} : (!llvm.ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, i64, i64, i32, i32)>>) -> !llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>
        %110 = "llvm.load"(%109) : (!llvm.ptr<ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>
        "scf.yield"(%106, %108, %110) : (i64, i64, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> ()
      }) : (i1) -> (i64, i64, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>)
      "scf.yield"(%100#0, %100#1, %100#2) : (i64, i64, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> ()
    }) : (i64, i64, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> (i64, i64, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>)
    "scf.yield"(%82#0, %82#1) : (i64, i64) -> ()
  }) : (i1) -> (i64, i64)
  %56 = "llvm.getelementptr"(%arg5) {rawConstantIndices = array<i32: 3>} : (!llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>
  "scf.yield"(%55#0, %55#1, %47, %56) : (i64, i64, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> ()
}) : (i64, i64, i64, i64, i64, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>) -> (i64, i64, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>, !llvm.ptr<struct<"_Lowered_rarc", (i64, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, ptr<struct<"_Lowered_node", (i64, i32, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_node">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64, i32, i32)>>, i32, ptr<struct<"_Lowered_rarc">>, ptr<struct<"_Lowered_rarc">>, i64, i64)>>)
